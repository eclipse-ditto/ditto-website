<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Eclipse Ditto Blog</title>
        <description>Announcements, tutorials and examples around Eclipse Ditto and Digital Twins</description>
        <link>https://www.eclipse.dev/ditto/</link>
        <atom:link href="https://www.eclipse.dev/ditto/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Wed, 23 Aug 2023 15:23:47 +0000</pubDate>
        <lastBuildDate>Wed, 23 Aug 2023 15:23:47 +0000</lastBuildDate>
        <generator>Jekyll v3.6.2</generator>
        
        <item>
            <title>Announcing Eclipse Ditto Release 3.3.0</title>
            <description>&lt;p&gt;The Eclipse Ditto teams is proud to announce the availability of Eclipse Ditto 
&lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/3.3.0&quot;&gt;3.3.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Version 3.3.0 contains features improving &lt;strong&gt;merge/PATCH&lt;/strong&gt; commands, &lt;strong&gt;skipping modifications&lt;/strong&gt; of a twin if the
value would be equal after the modification and a more production ready Ditto Helm chart.&lt;/p&gt;

&lt;h2 id=&quot;adoption&quot;&gt;Adoption&lt;/h2&gt;

&lt;p&gt;Companies are willing to show their adoption of Eclipse Ditto publicly: 
&lt;a href=&quot;https://iot.eclipse.org/adopters/?#iot.ditto&quot;&gt;https://iot.eclipse.org/adopters/?#iot.ditto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you use Eclipse Ditto it would be great to support the project by putting your logo there.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;p&gt;The main improvements and additions of Ditto 3.3.0 are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Support &lt;strong&gt;replacing certain json objects&lt;/strong&gt; in a &lt;strong&gt;merge/PATCH command&lt;/strong&gt; instead of merging their fields&lt;/li&gt;
  &lt;li&gt;Implicitly &lt;strong&gt;convert a merge/PATCH command&lt;/strong&gt; to a &lt;strong&gt;“Create Thing”&lt;/strong&gt; if thing is &lt;strong&gt;not yet existing&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Provide option to &lt;strong&gt;skip a modification&lt;/strong&gt; in the “twin” &lt;strong&gt;if the value “is equal”&lt;/strong&gt; to the previous value&lt;/li&gt;
  &lt;li&gt;Addition of the &lt;strong&gt;DevOps API endpoints&lt;/strong&gt; to Ditto’s &lt;strong&gt;OpenAPI&lt;/strong&gt; definition&lt;/li&gt;
  &lt;li&gt;Improve DittoProtocol MessagePath to be aware of message subject&lt;/li&gt;
  &lt;li&gt;Support alternative way of specifying &lt;strong&gt;“list” query parameters&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;UI enhancements:
    &lt;ul&gt;
      &lt;li&gt;Enhance Ditto-UI to dynamically configure log levels of Ditto&lt;/li&gt;
      &lt;li&gt;Building and packaging the UI with esbuild&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following non-functional enhancements are also included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Provide &lt;strong&gt;official Eclipse Ditto Helm chart&lt;/strong&gt; via &lt;strong&gt;Docker Hub&lt;/strong&gt; and move its sources to Ditto Git repository
    &lt;ul&gt;
      &lt;li&gt;In addition, provide a lot more configuration options and hardening of the chart to make it more feasible
for productive use&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following notable fixes are included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fix that redeliveries for acknowledgeable connectivity messages were issued too often&lt;/li&gt;
  &lt;li&gt;Fix WoT dispatcher starvation by adding timeouts to fetch models&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please have a look at the &lt;a href=&quot;release_notes_330.html&quot;&gt;3.3.0 release notes&lt;/a&gt; for a more detailed information on the release.&lt;/p&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Ditto JavaScript client release was published on &lt;a href=&quot;https://www.npmjs.com/~eclipse_ditto&quot;&gt;npmjs.com&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-dom&quot;&gt;@eclipse-ditto/ditto-javascript-client-dom&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-node&quot;&gt;@eclipse-ditto/ditto-javascript-client-node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Ditto Helm chart has been published to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto/&quot;&gt;eclipse/ditto&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Fri, 23 Jun 2023 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.dev/ditto/2023-06-23-release-announcement-330.html</link>
            <guid isPermaLink="true">https://www.eclipse.dev/ditto/2023-06-23-release-announcement-330.html</guid>
            
            <category>blog</category>
            
            
        </item>
        
        <item>
            <title>Announcing Eclipse Ditto Release 3.2.0</title>
            <description>&lt;p&gt;The Eclipse Ditto teams is proud to announce the availability of Eclipse Ditto 
&lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/3.2.0&quot;&gt;3.2.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Version 3.2.0 brings a new &lt;strong&gt;History API&lt;/strong&gt;, &lt;strong&gt;Eclipse Hono&lt;/strong&gt; connection type, &lt;strong&gt;case-insensitive searches&lt;/strong&gt; and
other smaller improvements, e.g. on the Ditto UI and in the JS client.&lt;/p&gt;

&lt;h2 id=&quot;adoption&quot;&gt;Adoption&lt;/h2&gt;

&lt;p&gt;Companies are willing to show their adoption of Eclipse Ditto publicly: 
&lt;a href=&quot;https://iot.eclipse.org/adopters/?#iot.ditto&quot;&gt;https://iot.eclipse.org/adopters/?#iot.ditto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you use Eclipse Ditto it would be great to support the project by putting your logo there.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;p&gt;The main improvements and additions of Ditto 3.2.0 are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;New &lt;strong&gt;History API&lt;/strong&gt; in order to be able to:
    &lt;ul&gt;
      &lt;li&gt;access historical state of things/policies/connections (with either given revision number or timestamp)&lt;/li&gt;
      &lt;li&gt;stream persisted events of things/policies via async APIs (WebSocket, Connections) and things also via existing SSE (Server-Sent-Events) API&lt;/li&gt;
      &lt;li&gt;configure deletion retention of events in the database for each entity&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Addition of new &lt;strong&gt;Eclipse Hono&lt;/strong&gt; connection type for Ditto managed connections&lt;/li&gt;
  &lt;li&gt;Option to do &lt;strong&gt;case-insensitive searches&lt;/strong&gt; and addition of a new RQL operator to declare case-insensitive like: &lt;code class=&quot;highlighter-rouge&quot;&gt;ilike&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;UI enhancements:
    &lt;ul&gt;
      &lt;li&gt;Push notifications on the Ditto UI using SSE (Server-Sent-Events), e.g. on thing updates&lt;/li&gt;
      &lt;li&gt;Autocomplete functionality for the search slot&lt;/li&gt;
      &lt;li&gt;Added configuring &lt;code class=&quot;highlighter-rouge&quot;&gt;Bearer&lt;/code&gt; auth type for the “devops” authentication&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;JavaScript client:
    &lt;ul&gt;
      &lt;li&gt;Support for &lt;strong&gt;“merge” / “patch”&lt;/strong&gt; functionality in the &lt;strong&gt;JS client&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following non-functional enhancements are also included:&lt;/p&gt;

&lt;p&gt;None in this release.&lt;/p&gt;

&lt;p&gt;The following notable fixes are included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Undo creating implicitly created policy as part of thing creation if creation of thing failed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please have a look at the &lt;a href=&quot;release_notes_320.html&quot;&gt;3.2.0 release notes&lt;/a&gt; for a more detailed information on the release.&lt;/p&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Ditto JavaScript client release was published on &lt;a href=&quot;https://www.npmjs.com/~eclipse_ditto&quot;&gt;npmjs.com&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-dom&quot;&gt;@eclipse-ditto/ditto-javascript-client-dom&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-node&quot;&gt;@eclipse-ditto/ditto-javascript-client-node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Wed, 08 Mar 2023 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.dev/ditto/2023-03-08-release-announcement-320.html</link>
            <guid isPermaLink="true">https://www.eclipse.dev/ditto/2023-03-08-release-announcement-320.html</guid>
            
            <category>blog</category>
            
            
        </item>
        
        <item>
            <title>Announcing Eclipse Ditto Release 3.1.0</title>
            <description>&lt;p&gt;The Eclipse Ditto teams is proud to announce the availability of Eclipse Ditto 
&lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/3.1.0&quot;&gt;3.1.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Version 3.1.0 brings &lt;strong&gt;policy imports&lt;/strong&gt;, &lt;strong&gt;AMQP 1.0 message annotation&lt;/strong&gt; support, &lt;strong&gt;conditional message sending&lt;/strong&gt; and
other smaller improvements, e.g. regarding shutdown/restart improvements.&lt;/p&gt;

&lt;h2 id=&quot;adoption&quot;&gt;Adoption&lt;/h2&gt;

&lt;p&gt;Companies are willing to show their adoption of Eclipse Ditto publicly: 
&lt;a href=&quot;https://iot.eclipse.org/adopters/?#iot.ditto&quot;&gt;https://iot.eclipse.org/adopters/?#iot.ditto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When you use Eclipse Ditto it would be great to support the project by putting your logo there.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;p&gt;The main improvements and additions of Ditto 3.1.0 are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Conditional message processing&lt;/strong&gt; based on a specified condition targeting the twin state&lt;/li&gt;
  &lt;li&gt;Support for &lt;strong&gt;reading/writing AMQP 1.0 “Message annotations”&lt;/strong&gt; in Ditto managed connections&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Policy imports&lt;/strong&gt;: Reference other policies from policies, enabling reuse of policy entries&lt;/li&gt;
  &lt;li&gt;Several Ditto explorer UI enhancements&lt;/li&gt;
  &lt;li&gt;Support for configuring an &lt;strong&gt;audience&lt;/strong&gt; for Ditto managed HTTP connections performing OAuth2.0 based authentication&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following non-functional enhancements are also included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;End-2-End &lt;strong&gt;graceful shutdown support&lt;/strong&gt;, enabling a smoother restart of Ditto services with less user impact&lt;/li&gt;
  &lt;li&gt;Support for &lt;strong&gt;encryption/decryption of secrets&lt;/strong&gt; (e.g. passwords) part of the Ditto managed connections before
persisting to the database&lt;/li&gt;
  &lt;li&gt;IPv6 support for blocked subnet validation&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following notable fixes are included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fixing that known connections were not immediately started after connectivity service restart&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please have a look at the &lt;a href=&quot;release_notes_310.html&quot;&gt;3.1.0 release notes&lt;/a&gt; for a more detailed information on the release.&lt;/p&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Ditto JavaScript client release was published on &lt;a href=&quot;https://www.npmjs.com/~eclipse_ditto&quot;&gt;npmjs.com&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-dom&quot;&gt;@eclipse-ditto/ditto-javascript-client-dom&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-node&quot;&gt;@eclipse-ditto/ditto-javascript-client-node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Fri, 16 Dec 2022 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.dev/ditto/2022-12-16-release-announcement-310.html</link>
            <guid isPermaLink="true">https://www.eclipse.dev/ditto/2022-12-16-release-announcement-310.html</guid>
            
            <category>blog</category>
            
            
        </item>
        
        <item>
            <title>Support conditional requests for live messages</title>
            <description>&lt;p&gt;With the upcoming release of Eclipse Ditto &lt;strong&gt;version 3.1.0&lt;/strong&gt; it will be possible to process live messages based on 
conditions.&lt;/p&gt;

&lt;h2 id=&quot;conditional-live-messages&quot;&gt;Conditional live messages&lt;/h2&gt;
&lt;p&gt;Ditto now supports conditional message sending based on a specified condition in the request.
This functionality can be used via the HTTP API with an HTTP header or query parameter, as well as via the Ditto protocol,
and the Ditto Java Client.
For all three ways there is an example provided in this blog post.&lt;/p&gt;

&lt;p&gt;This turns useful, if you want for example to send a message to your device, but only if its digital twin has a specific attribute set.&lt;/p&gt;

&lt;p&gt;To be more concrete let’s say we have a thing with a feature that is measuring carbon monoxide levels, and we only want to
send an alarm live message to the corresponding device, if the particle level is over 10.
To achieve this the following HTTP request can be used:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /api/2/things/org.eclipse.ditto:coffeebrewer/inbox/mesages/co-alarm?condition=gt(features/carbon-monoxide-level/properties/ppm,10)

CO Level too high! Open your windows!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Conditions can be specified using &lt;a href=&quot;basic-rql.html&quot;&gt;RQL syntax&lt;/a&gt; to check if a thing has a specific attribute
or feature property value.&lt;/p&gt;

&lt;p&gt;In case the condition does not match to the actual state of the thing, the request will fail with
HTTP status code &lt;strong&gt;412 - Precondition Failed&lt;/strong&gt;. And the message will not be processed.&lt;/p&gt;

&lt;p&gt;If the given condition is invalid, the request will fail with HTTP status code &lt;strong&gt;400 - Bad Request&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;More documentation for this feature can be found here: &lt;a href=&quot;basic-conditional-requests.html&quot;&gt;Conditional Requests&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;permissions-for-conditional-requests&quot;&gt;Permissions for conditional requests&lt;/h3&gt;

&lt;p&gt;In order to execute a conditional request, the authorized subject needs to have WRITE permission at the resource
that should be changed by the request.&lt;/p&gt;

&lt;p&gt;Additionally, the authorized subject needs to have READ permission at the resource used in the specified condition.
Given the condition from the introduction &lt;code class=&quot;highlighter-rouge&quot;&gt;gt(features/carbon-monoxide-level/properties/ppm,10)&lt;/code&gt;,
read access on the single attribute would be sufficient.
However, the condition can also be more complex, or include other sub-structures of the thing.
Then of course, the authorized subject needs READ permission on all parameters of the specified condition.&lt;/p&gt;

&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt;
&lt;p&gt;The following subsections will show how to use conditional requests via the HTTP API, Ditto protocol,
and Ditto Java Client.&lt;/p&gt;

&lt;p&gt;To demonstrate the new conditional request, we assume that the following thing already exists:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thingId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.eclipse.ditto:carbon-monoxide-alarm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;policyId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.eclipse.ditto:carbon-monoxide-alarm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;attributes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;manufacturer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ACME demo corp.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;location&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Wonderland&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;serialno&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;42&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;carbon-monoxide-level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ppm,&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;alarm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;lastTriggered&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2021-09-23T07:01:56Z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;confirmed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ConnectionStatus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.eclipse.ditto:ConnectionStatus:1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;readySince&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2022-11-04T14:35:02.643Z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;readyUntil&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2022-11-04T16:35:03.643Z&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;condition-based-on-alarmconfirmed&quot;&gt;Condition based on alarm/confirmed&lt;/h3&gt;
&lt;p&gt;In this example a live alarm message from the device should only be sent, if the alarm confirmed property is set to 
false by the end user application. This is done to prevent duplicate received alarms by the customer.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /api/2/things/org.eclipse.ditto:carbon-monoxide-alarm/inbox/mesages/co-alarm?condition=and(gt(features/carbon-monoxide-level/properties/ppm,10),eq(features/alarm/properties/confirmed,false))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Another use case could be to i.e. only send a message to a device when the device is connected:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /api/2/things/org.eclipse.ditto:carbon-monoxide-alarm/inbox/messages/doSomething?condition=gt(features/ConnectionStatus/properties/status/readyUntil,time:now)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;permissions-to-execute-the-example&quot;&gt;Permissions to execute the example&lt;/h3&gt;
&lt;p&gt;For this example, the authorized subject could have READ and WRITE permissions on the complete thing resource.
However, it is only necessary on the path &lt;em&gt;thing:/features/alarm/properties/confirmed&lt;/em&gt; and &lt;em&gt;thing:features/carbon-monoxide-level/properties/ppm&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;conditional-requests-via-http-api&quot;&gt;Conditional requests via HTTP API&lt;/h2&gt;
&lt;p&gt;Using the HTTP API the condition can either be specified via HTTP Header or via HTTP query parameter.&lt;br /&gt;
In this section, we will show how to use both options.&lt;/p&gt;

&lt;h3 id=&quot;conditional-request-with-http-header&quot;&gt;Conditional request with HTTP Header&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /api/2/things/org.eclipse.ditto:carbon-monoxide-alarm/outbox/messages/co-alarm
Content-Type: application/json
condition: eq(features/alarm/properties/confirmed,false)

CO Level too high! Open your windows!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;conditional-request-with-http-query-parameter&quot;&gt;Conditional request with HTTP query parameter&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /api/2/things/org.eclipse.ditto:carbon-monoxide-alarm/outbox/messages/co-alarm?condition=eq(features/alarm/properties/confirmed,false)
Content-Type: application/json

CO Level too high! Open your windows!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conditional-request-via-ditto-protocol&quot;&gt;Conditional request via Ditto protocol&lt;/h2&gt;
&lt;p&gt;It is also possible to use conditional requests via the Ditto protocol.
Applying the following Ditto command to the existing thing will lead to the same result as in the above HTTP example.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;topic&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.eclipse.ditto/carbon-monoxide-alarm/things/live/messages/co-alarm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;headers&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;content-type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;condition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;eq(features/alarm/properties/confirmed,false)&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/outbox/messages/co-alarm&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;CO Level to high! Open your windows!&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;using-conditional-requests-in-the-ditto-java-client&quot;&gt;Using conditional requests in the Ditto Java Client&lt;/h2&gt;
&lt;p&gt;The conditional requests are also supported via the &lt;a href=&quot;client-sdk-java.html&quot;&gt;Ditto Java Client&lt;/a&gt;
with the upcoming (&lt;strong&gt;Ditto Java Client version 3.1.0&lt;/strong&gt;).&lt;/p&gt;

&lt;p&gt;Example for a conditional update of a thing with the Ditto Java client:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thingId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;org.eclipse.ditto:carbon-monoxide-alarm&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// initialize the ditto-client&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DittoClient&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dittoClient&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;dittoClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;live&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;eq(features/alarm/properties/confirmed,false)&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thingId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;co-alarm&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CO Level to high! Open your windows!&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;throwable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;throwable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Received error while sending conditional update: '{}' &quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;throwable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;LOGGER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Received response for conditional update: '{}'&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;feedback&quot;&gt;Feedback?&lt;/h2&gt;

&lt;p&gt;Please &lt;a href=&quot;feedback.html&quot;&gt;get in touch&lt;/a&gt; if you have feedback or questions towards this new functionality.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt; 
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.dev/ditto/2022-11-04-live-message-conditions.html</link>
            <guid isPermaLink="true">https://www.eclipse.dev/ditto/2022-11-04-live-message-conditions.html</guid>
            
            <category>blog</category>
            
            <category>http</category>
            
            <category>protocol</category>
            
            <category>rql</category>
            
            
        </item>
        
        <item>
            <title>Announcing Eclipse Ditto Release 3.0.0</title>
            <description>&lt;p&gt;The Eclipse Ditto teams is proud to announce the availability of Eclipse Ditto 
&lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/3.0.0&quot;&gt;3.0.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With 3.0.0, the required amount of different service roles was reduced from 6 to only 5 as the “ditto-concierge” 
service’s responsibilities (performing authorization) was moved to other services.&lt;br /&gt;
That reduces the overall resource consumption and network traffic of a Ditto installation.&lt;/p&gt;

&lt;p&gt;The other big topic for version 3.0.0 is the new search index which does not only respond much quicker to search queries, 
but also brings lots of performance improvements regarding MongoDB utilization and also a huge stabilization regarding 
consistency of the search in Ditto.&lt;/p&gt;

&lt;p&gt;Many other new features and improvements are also part of the release, e.g. a new HTTP API for managing connections and
even the first version of a Ditto UI.&lt;/p&gt;

&lt;h2 id=&quot;adoption&quot;&gt;Adoption&lt;/h2&gt;

&lt;p&gt;Companies are willing to show their adoption of Eclipse Ditto publicly: 
&lt;a href=&quot;https://iot.eclipse.org/adopters/?#iot.ditto&quot;&gt;https://iot.eclipse.org/adopters/?#iot.ditto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From our various &lt;a href=&quot;feedback.html&quot;&gt;feedback channels&lt;/a&gt; we however know of more adoption.&lt;br /&gt;
If you are making use of Eclipse Ditto, it would be great to show this by adding your company name to that list of 
known adopters.&lt;br /&gt;
In the end, that’s one main way of measuring the success of the project.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;p&gt;The main improvements and additions of Ditto 3.0.0 are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ability to &lt;strong&gt;search in JSON arrays&lt;/strong&gt; and thus also for feature definitions&lt;/li&gt;
  &lt;li&gt;Several &lt;strong&gt;improvements around “metadata”&lt;/strong&gt; in Ditto managed things&lt;/li&gt;
  &lt;li&gt;Creation of &lt;strong&gt;new HTTP API for CRUD&lt;/strong&gt; management of Ditto managed &lt;strong&gt;connections&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Addition of &lt;strong&gt;Ditto explorer UI&lt;/strong&gt; for managing things, policies and connections&lt;/li&gt;
  &lt;li&gt;Support for EC signed JsonWebKeys (JWKs)&lt;/li&gt;
  &lt;li&gt;W3C WoT (Web of Things) adjustments and improvements for latest 1.1 “Candidate Recommendation” from W3C&lt;/li&gt;
  &lt;li&gt;Make “default namespace” for creating new entities configurable&lt;/li&gt;
  &lt;li&gt;Provide custom namespace when creating things via HTTP POST&lt;/li&gt;
  &lt;li&gt;Make it possible to provide multiple OIDC issuer urls for a single configured openid-connect “prefix”&lt;/li&gt;
  &lt;li&gt;Addition of a “CloudEvents” mapper for mapping CE payloads in Ditto connections&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following non-functional work is also included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;New Ditto &lt;strong&gt;“thing” search index&lt;/strong&gt; massively improving write performance; reducing the search consistency lag
and improving search query performance&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Removal of former “ditto-concierge” service&lt;/strong&gt;, moving its functionality to other Ditto services; reducing overall
resource consumption and improving latency+throughput for API calls&lt;/li&gt;
  &lt;li&gt;Creation of common way to extend Ditto via DittoExtensionPoints&lt;/li&gt;
  &lt;li&gt;Rewrite of Ditto managed &lt;strong&gt;MQTT connections to use reactive-streams based client&lt;/strong&gt;, supporting consumption applying
backpressure&lt;/li&gt;
  &lt;li&gt;Further improvements on rolling updates and other failover scenarios&lt;/li&gt;
  &lt;li&gt;Consolidate and simplify DevOps command responses&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following notable fixes are included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Passwords&lt;/strong&gt; stored in the URI of &lt;strong&gt;connections&lt;/strong&gt; to &lt;strong&gt;no longer need to be double encoded&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Using the &lt;code class=&quot;highlighter-rouge&quot;&gt;Normalized&lt;/code&gt; connection payload mapper together with enriched &lt;code class=&quot;highlighter-rouge&quot;&gt;extra&lt;/code&gt; fields lead to wrongly merged things&lt;/li&gt;
  &lt;li&gt;Adding custom Java based &lt;code class=&quot;highlighter-rouge&quot;&gt;MessageMappers&lt;/code&gt; to Ditto via classpath was no longer possible&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please have a look at the &lt;a href=&quot;release_notes_300.html&quot;&gt;3.0.0 release notes&lt;/a&gt; for a more detailed information on the release.&lt;/p&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Ditto JavaScript client release was published on &lt;a href=&quot;https://www.npmjs.com/~eclipse_ditto&quot;&gt;npmjs.com&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-dom&quot;&gt;@eclipse-ditto/ditto-javascript-client-dom&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-node&quot;&gt;@eclipse-ditto/ditto-javascript-client-node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.dev/ditto/2022-09-28-release-announcement-300.html</link>
            <guid isPermaLink="true">https://www.eclipse.dev/ditto/2022-09-28-release-announcement-300.html</guid>
            
            <category>blog</category>
            
            
        </item>
        
        <item>
            <title>Reactive MQTT Connectivity</title>
            <description>&lt;p&gt;The upcoming Eclipse Ditto version 3.0.0 will ship with a major refactoring of the MQTT
connectivity module.&lt;br /&gt;
In this post we want to highlight what’s new and why this could be interesting for you.&lt;/p&gt;

&lt;h2 id=&quot;backpressure-via-throttling&quot;&gt;Backpressure via throttling&lt;/h2&gt;
&lt;p&gt;The most noteworthy innovation is that Ditto now consumes incoming publish messages
by using the
&lt;a href=&quot;https://hivemq.github.io/hivemq-mqtt-client/docs/api-flavours/&quot;&gt;reactive API flavour of the HiveMQ client&lt;/a&gt;.&lt;br /&gt;
This, together with throttling, effectively enables &lt;em&gt;backpressure&lt;/em&gt; for inbound
MQTT publishes for protocol version 3.x and 5:&lt;/p&gt;

&lt;div class=&quot;language-config highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;connectivity&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;

…
&lt;span class=&quot;n&quot;&gt;throttling&lt;/span&gt; {
  &lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt; = &lt;span class=&quot;n&quot;&gt;true&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt; = ${?&lt;span class=&quot;n&quot;&gt;MQTT_CONSUMER_THROTTLING_ENABLED&lt;/span&gt;}

  &lt;span class=&quot;c&quot;&gt;# Interval at which the consumer is throttled. Must be &amp;gt; 0s.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt; = ${?&lt;span class=&quot;n&quot;&gt;MQTT_CONSUMER_THROTTLING_INTERVAL&lt;/span&gt;}

  &lt;span class=&quot;c&quot;&gt;# The maximum number of messages the consumer is allowed to receive
&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# within the configured throttling interval e.g. 100 msgs/s.
&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Must be &amp;gt; 0.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; = ${?&lt;span class=&quot;n&quot;&gt;MQTT_CONSUMER_THROTTLING_LIMIT&lt;/span&gt;}
}
…
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This kind of throttling applies to all in-flight messages – no matter what
their QoS is set to.&lt;br /&gt;
Backpressure protects Ditto from congestion caused by a too high amount of
incoming publishes.&lt;br /&gt;
Of course the broker has to deal with backpressure as well when throttling in
Ditto is enabled because the amount of unprocessed messages would pile up
at the broker.&lt;/p&gt;

&lt;h2 id=&quot;flow-control-with-receive-maximum-mqtt-5&quot;&gt;Flow Control with Receive Maximum (MQTT 5)&lt;/h2&gt;
&lt;p&gt;With MQTT 5 it is possible to specify a &lt;em&gt;Receive Maximum&lt;/em&gt; when the client
connects to the broker.&lt;br /&gt;
For QoS 1 or 2 this value determines how many unacknowledged incoming messages
the client accepts from the broker.&lt;br /&gt;
Apart from throttling this is an additional approach how Ditto can be protected
from excessive load – at least for MQTT 5 connections.&lt;br /&gt;
The (client) Receive Maximum can be set for Ditto either in configuration or
via environment variable:&lt;/p&gt;

&lt;div class=&quot;language-config highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;connectivity&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;

…
&lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;maximum&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;65535&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;maximum&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; = ${?&lt;span class=&quot;n&quot;&gt;CONNECTIVITY_MQTT_CLIENT_RECEIVE_MAXIMUM&lt;/span&gt;}
…
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For more details, please have a look at
&lt;a href=&quot;https://www.hivemq.com/blog/mqtt5-essentials-part12-flow-control/&quot;&gt;HiveMQ’s MQTT 5 Essentials, Part 12&lt;/a&gt;
that covers just this topic.&lt;/p&gt;

&lt;h2 id=&quot;unified-implementation&quot;&gt;Unified implementation&lt;/h2&gt;
&lt;p&gt;Under the hood, almost anything related to MQTT changed.
With the previous implementation most of the logic was divided into a common
base implementation and a concrete implementation for protocol version 3.1.1
and 5.&lt;br /&gt;
Obviously this worked.&lt;br /&gt;
However, the algorithms were scattered over multiple classes which made it
difficult to understand what is going on (hello, maintainability 😉).&lt;/p&gt;

&lt;p&gt;Now, the distinction between protocol version 3.x and 5 is made on the level
of data structures.&lt;br /&gt;
Luckily the evolution of the MQTT protocol from version 3.1.1 to version 5
as well as the design of HiveMQ’s client library made this very easy.&lt;br /&gt;
For example, instead of dealing with a &lt;code class=&quot;highlighter-rouge&quot;&gt;Mqtt3Publish&lt;/code&gt; and a &lt;code class=&quot;highlighter-rouge&quot;&gt;Mqtt5Publish&lt;/code&gt; in
parallel all the time we introduced  a &lt;code class=&quot;highlighter-rouge&quot;&gt;GenericMqttPublish&lt;/code&gt; which can be
converted from and to the specific types at the time when they come in
contact with the client.&lt;br /&gt;
The rest of the time Ditto can work with the generic representation.&lt;/p&gt;

&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Tue, 12 Jul 2022 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.dev/ditto/2022-07-12-reactive-mqtt.html</link>
            <guid isPermaLink="true">https://www.eclipse.dev/ditto/2022-07-12-reactive-mqtt.html</guid>
            
            <category>blog</category>
            
            
        </item>
        
        <item>
            <title>Announcing Eclipse Ditto Release 2.4.0</title>
            <description>&lt;p&gt;The Eclipse Ditto teams announces availability of Eclipse Ditto &lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/2.4.0&quot;&gt;2.4.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The main topics in this release were the move from Java 11 to Java 17 (and the switch in Ditto’s pre-built Docker containers from OpenJ9 to Hotspot runtime), 
W3C WoT (Web of Things) integration and enhanced placeholder capabilities, e.g. used in JWT claim extraction and signal 
enrichment.&lt;/p&gt;

&lt;h2 id=&quot;adoption&quot;&gt;Adoption&lt;/h2&gt;

&lt;p&gt;Companies are willing to show their adoption of Eclipse Ditto publicly: 
&lt;a href=&quot;https://iot.eclipse.org/adopters/?#iot.ditto&quot;&gt;https://iot.eclipse.org/adopters/?#iot.ditto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From our various &lt;a href=&quot;feedback.html&quot;&gt;feedback channels&lt;/a&gt; we however know of more adoption.&lt;br /&gt;
If you are making use of Eclipse Ditto, it would be great to show this by adding your company name to that list of 
known adopters.&lt;br /&gt;
In the end, that’s one main way of measuring the success of the project.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;p&gt;The main improvements and additions of Ditto 2.4.0 are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;W3C WoT (Web of Things) integration&lt;/li&gt;
  &lt;li&gt;SSE (ServerSentEvent) API for subscribing to messages&lt;/li&gt;
  &lt;li&gt;Recovery status for connections indicating when e.g. recovery is no longer tried after max backoff&lt;/li&gt;
  &lt;li&gt;Enhance placeholders to resolve to multiple values&lt;/li&gt;
  &lt;li&gt;Advanced JWT placeholder operations&lt;/li&gt;
  &lt;li&gt;Support for a wildcard/placeholder identifying the changed feature in order to enrich e.g. its definition&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following notable fixes are included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Several fixes and improvements regarding consistency and performance of search updates&lt;/li&gt;
  &lt;li&gt;Don’t publish messages with failed enrichments and issue failed ack&lt;/li&gt;
  &lt;li&gt;Filter for incorrect element types in jsonArray of feature definitions&lt;/li&gt;
  &lt;li&gt;Fix of placeholder resolvment in “commandHeaders” of “ImplicitThingCreation” mapper&lt;/li&gt;
  &lt;li&gt;Fix &lt;code class=&quot;highlighter-rouge&quot;&gt;fn:substring-after()&lt;/code&gt; function returning incorrect data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following non-functional work is also included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Upgrade of compiler target level for service modules from Java 11 to Java 17&lt;/li&gt;
  &lt;li&gt;Switch of used Java runtime in pre-built Docker containers from OpenJ9 to Hotspot&lt;/li&gt;
  &lt;li&gt;Publication of pre-built multi-architecture Docker images for &lt;code class=&quot;highlighter-rouge&quot;&gt;linux/amd64&lt;/code&gt; (as always) and now in addition &lt;code class=&quot;highlighter-rouge&quot;&gt;linux/arm64&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Removal of rate limiting / throttling limits as default&lt;/li&gt;
  &lt;li&gt;Update of several used dependencies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please have a look at the &lt;a href=&quot;release_notes_240.html&quot;&gt;2.4.0 release notes&lt;/a&gt; for a more detailed information on the release.&lt;/p&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Ditto JavaScript client release was published on &lt;a href=&quot;https://www.npmjs.com/~eclipse_ditto&quot;&gt;npmjs.com&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-dom&quot;&gt;@eclipse-ditto/ditto-javascript-client-dom&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-node&quot;&gt;@eclipse-ditto/ditto-javascript-client-node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-concierge/&quot;&gt;eclipse/ditto-concierge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Thu, 14 Apr 2022 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.dev/ditto/2022-04-14-release-announcement-240.html</link>
            <guid isPermaLink="true">https://www.eclipse.dev/ditto/2022-04-14-release-announcement-240.html</guid>
            
            <category>blog</category>
            
            
        </item>
        
        <item>
            <title>W3C WoT (Web of Things) integration</title>
            <description>&lt;p&gt;The upcoming Eclipse Ditto &lt;strong&gt;version 2.4.0&lt;/strong&gt; will add support for &lt;a href=&quot;https://www.w3.org/WoT/&quot;&gt;W3C WoT (Web of Things)&lt;/a&gt; 
integration by referencing WoT Thing Model in Ditto managed twins describing the Things’ capabilities.&lt;/p&gt;

&lt;p&gt;Using this integration, Ditto managed digital twins can be linked to WoT “Thing Models” from which Ditto can create 
WoT “Thing Descriptions” containing the API descriptions of the twins.&lt;/p&gt;

&lt;p&gt;By integrating WoT, Ditto takes a big step forward towards:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;increased interoperability&lt;/li&gt;
  &lt;li&gt;introspection of twins to find out their capabilities
    &lt;ul&gt;
      &lt;li&gt;which &lt;code class=&quot;highlighter-rouge&quot;&gt;properties&lt;/code&gt; are provided and their data type and format&lt;/li&gt;
      &lt;li&gt;which &lt;code class=&quot;highlighter-rouge&quot;&gt;actions&lt;/code&gt; can be invoked on the devices, including their expected input/output data type and format&lt;/li&gt;
      &lt;li&gt;which &lt;code class=&quot;highlighter-rouge&quot;&gt;events&lt;/code&gt; the devices are able to emit, including their data type and format&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;addition of semantic context to Ditto managed digital twins and their capabilities&lt;/li&gt;
  &lt;li&gt;description of Ditto twin HTTP APIs in an open, established, well specified, “web optimized”, active IoT standard&lt;/li&gt;
  &lt;li&gt;backing Ditto managed twins with WoT models, also supporting “brownfield” setups, without the need for actual devices to be aware of WoT&lt;/li&gt;
  &lt;li&gt;opening the door to a new ecosystem of tools&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To learn more about WoT (Web of Things), please visit: &lt;a href=&quot;https://www.w3.org/WoT/documentation/&quot;&gt;Web of Things in a Nutshell&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;wot-integration-in-ditto&quot;&gt;WoT integration in Ditto&lt;/h2&gt;

&lt;p&gt;The WoT integration in Ditto covers several aspects:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;referencing HTTP(s) URLs to WoT Thing Models in &lt;a href=&quot;basic-thing.html#definition&quot;&gt;Thing Definitions&lt;/a&gt; and in &lt;a href=&quot;basic-feature.html#feature-definition&quot;&gt;Feature Definitions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;generation of WoT Thing Descriptions for Thing and Feature instances based on referenced Thing Models
    &lt;ul&gt;
      &lt;li&gt;resolving potential &lt;a href=&quot;https://www.w3.org/TR/2022/WD-wot-thing-description11-20220311/#thing-model-extension-import&quot;&gt;extensions via &lt;code class=&quot;highlighter-rouge&quot;&gt;tm:extends&lt;/code&gt; and imports via &lt;code class=&quot;highlighter-rouge&quot;&gt;tm:ref&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;resolving potential Thing level &lt;a href=&quot;https://www.w3.org/TR/2022/WD-wot-thing-description11-20220311/#thing-model-composition&quot;&gt;compositions via &lt;code class=&quot;highlighter-rouge&quot;&gt;tm:submodel&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;resolving potential &lt;a href=&quot;https://www.w3.org/TR/2022/WD-wot-thing-description11-20220311/#thing-model-td-placeholder&quot;&gt;TM placeholders&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;upon creation of new Things, generation of a “JSON skeleton” following the WoT Thing Model, including referenced 
TM submodels as Features of the Thing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For additional details about the WoT integration, please check the full 
&lt;a href=&quot;basic-wot-integration.html&quot;&gt;WoT integration documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The WoT integration is still marked as “experimental” as the WoT Thing Description version 1.1 is not yet published as
“W3C Recommendation” and may still change - as well as the implementation of the standard in Ditto.&lt;/p&gt;

&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot;&gt;&lt;i class=&quot;fa fa-info-circle&quot;&gt;&lt;/i&gt; &lt;b&gt;Note:&lt;/b&gt; In order to enable the &lt;strong&gt;experimental&lt;/strong&gt; support for WoT in Ditto &lt;code class=&quot;highlighter-rouge&quot;&gt;2.4.0&lt;/code&gt;, please
      configure the environment variable &lt;code class=&quot;highlighter-rouge&quot;&gt;DITTO_DEVOPS_FEATURE_WOT_INTEGRATION_ENABLED&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;.&lt;/div&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;

&lt;p&gt;For a full example of the different aspects of the WoT integration, please check the full 
&lt;a href=&quot;basic-wot-integration-example.html&quot;&gt;WoT integration example&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To summarize:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;“link” a Thing with a publicly available WoT Thing Model by specifying the URL in its &lt;a href=&quot;basic-thing.html#definition&quot;&gt;Thing Definition&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;creation of a new Thing can use a Thing Model (e.g. the example model &lt;a href=&quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/floor-lamp-1.0.0.tm.jsonld&quot;&gt;https://eclipse-ditto.github.io/ditto-examples/wot/models/floor-lamp-1.0.0.tm.jsonld&lt;/a&gt;) in order to generate a JSON skeleton:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  curl &lt;span class=&quot;nt&quot;&gt;--location&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--request&lt;/span&gt; PUT &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; ditto:ditto &lt;span class=&quot;s1&quot;&gt;'https://ditto.eclipseprojects.io/api/2/things/io.eclipseprojects.ditto:floor-lamp-0815'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--header&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--data-raw&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{
      &quot;definition&quot;: &quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/floor-lamp-1.0.0.tm.jsonld&quot;
  }'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;which results in a Thing like this:
    &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thingId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;io.eclipseprojects.ditto:floor-lamp-0815&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;policyId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;io.eclipseprojects.ditto:floor-lamp-0815&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/floor-lamp-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;attributes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;manufacturer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;serialNo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Spot1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/dimmable-colored-lamp-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/colored-lamp-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/switchable-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dimmer-level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;color&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;g&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;on&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Spot2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/dimmable-colored-lamp-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/colored-lamp-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/switchable-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dimmer-level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;color&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;g&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;on&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Spot3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/dimmable-colored-lamp-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/colored-lamp-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/switchable-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dimmer-level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;color&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;g&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;on&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ConnectionStatus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/connection-status-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;readySince&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;readyUntil&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PowerConsumptionAwareness&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/power-consumption-aware-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;reportPowerConsumption&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SmokeDetection&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/smoke-detector-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Status-LED&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/colored-lamp-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse-ditto.github.io/ditto-examples/wot/models/switchable-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;color&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;g&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;on&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;the WoT Thing Description of Things containing a Thing Model in their &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;definition&quot;&lt;/code&gt; may then be retrieved by invoking 
the existing endpoint&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;GET /api/2/things/&amp;lt;thingId&amp;gt;&lt;/code&gt; with the &lt;code class=&quot;highlighter-rouge&quot;&gt;Accept&lt;/code&gt; header &lt;code class=&quot;highlighter-rouge&quot;&gt;application/td+json&lt;/code&gt;:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;--location&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--request&lt;/span&gt; GET &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; ditto:ditto &lt;span class=&quot;s1&quot;&gt;'https://ditto.eclipseprojects.io/api/2/things/io.eclipseprojects.ditto:floor-lamp-0815'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--header&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Accept: application/td+json'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Features of Things are handled as WoT “submodels” and also can describe themselves with the same approach, e.g.:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;--location&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--request&lt;/span&gt; GET &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; ditto:ditto &lt;span class=&quot;s1&quot;&gt;'https://ditto.eclipseprojects.io/api/2/things/io.eclipseprojects.ditto:floor-lamp-0815/features/Spot1'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--header&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Accept: application/td+json'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ditto-wot-java-model&quot;&gt;Ditto WoT Java model&lt;/h2&gt;

&lt;p&gt;As part of the integration of WoT in Ditto, a Java module has been added to provide a Java API for the WoT 
“Thing Description”/”Thing Model” and their parts - this module can also be used separately from Ditto in order to
e.g. have a builder based API for building new objects or to read a TD/TM from a string:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.eclipse.ditto&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;ditto-wot-model&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${ditto.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- the ditto-wot-model is available since &quot;ditto.version&quot; 2.4.0 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Please have a look at the added &lt;a href=&quot;https://github.com/eclipse-ditto/ditto/tree/master/wot/model&quot;&gt;ditto-wot-model module&lt;/a&gt; to find
out more about example usage.&lt;/p&gt;

&lt;h2 id=&quot;feedback&quot;&gt;Feedback?&lt;/h2&gt;

&lt;p&gt;Please &lt;a href=&quot;feedback.html&quot;&gt;get in touch&lt;/a&gt; if you have feedback or questions towards this new functionality.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt; 
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Thu, 03 Mar 2022 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.dev/ditto/2022-03-03-wot-integration.html</link>
            <guid isPermaLink="true">https://www.eclipse.dev/ditto/2022-03-03-wot-integration.html</guid>
            
            <category>blog</category>
            
            <category>wot</category>
            
            <category>http</category>
            
            
        </item>
        
        <item>
            <title>Announcing Eclipse Ditto Release 2.3.0</title>
            <description>&lt;p&gt;The Eclipse Ditto teams announces availability of Eclipse Ditto &lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/2.3.0&quot;&gt;2.3.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It contains mainly new features around the Ditto &lt;a href=&quot;protocol-twinlive.html#live&quot;&gt;“live” channel&lt;/a&gt; which can be used to 
directly interact with devices.&lt;/p&gt;

&lt;p&gt;Such live commands may now be easily &lt;a href=&quot;2021-12-20-http-live-channel.html&quot;&gt;created via the HTTP API&lt;/a&gt; - and in addition
a conventional API call targeting the persisted &lt;a href=&quot;protocol-twinlive.html#twin&quot;&gt;twin&lt;/a&gt; may now be automatically converted
to a live command, based on a passed &lt;a href=&quot;2021-12-22-live-channel-condition.html&quot;&gt;live channel condition&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With that, we are proud that we now can provide a really powerful addition to Ditto’s “Digital Twin pattern”:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;requesting data from an actual device e.g. when it is currently connected/online (based on a &lt;a href=&quot;basic-conditional-requests.html#live-channel-condition&quot;&gt;live channel condition&lt;/a&gt; targeting the online status)&lt;/li&gt;
  &lt;li&gt;fall back to its last known persisted state
    &lt;ul&gt;
      &lt;li&gt;if it is currently not online (the condition did not match)&lt;/li&gt;
      &lt;li&gt;or also as a fallback, if the device does not answer within e.g. 10 seconds&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;all that within one single API call, including information from which source the data was reported back
    &lt;ul&gt;
      &lt;li&gt;the “live” device or the persisted “twin”&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;adoption&quot;&gt;Adoption&lt;/h2&gt;

&lt;p&gt;Companies are willing to show their adoption of Eclipse Ditto publicly: &lt;a href=&quot;https://iot.eclipse.org/adopters/?#iot.ditto&quot;&gt;https://iot.eclipse.org/adopters/?#iot.ditto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From our various &lt;a href=&quot;feedback.html&quot;&gt;feedback channels&lt;/a&gt; we however know of more adoption.&lt;br /&gt;
If you are making use of Eclipse Ditto, it would be great to show this by adding your company name to that list of 
known adopters.&lt;br /&gt;
In the end, that’s one main way of measuring the success of the project.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;p&gt;The main improvements and additions of Ditto 2.3.0 are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HTTP API for “live” commands&lt;/li&gt;
  &lt;li&gt;Smart channel strategy for live/twin read access&lt;/li&gt;
  &lt;li&gt;Configurable allowing creation of entities (policies/things) based on namespace and authenticated subjects&lt;/li&gt;
  &lt;li&gt;Allow using &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; as a placeholder for the feature id in selected fields&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following notable fixes are included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fix potential concurrent modification errors when using JavaScript payload mapping and global variables&lt;/li&gt;
  &lt;li&gt;Fix reconnect backoff for Kafka connections with authentication failures&lt;/li&gt;
  &lt;li&gt;Fix caching of JWTs in HTTP push connections&lt;/li&gt;
  &lt;li&gt;Fix potentially unreachable client actors in connections with &lt;code class=&quot;highlighter-rouge&quot;&gt;clientCount &amp;gt; 1&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Fix search inconsistencies for very active things during shard relocation (e.g. on rolling updates)&lt;/li&gt;
  &lt;li&gt;Fix that a Kafka connection with only targets remains “open” even if Kafka broker is not available&lt;/li&gt;
  &lt;li&gt;Allow usage of absolute domain paths ending with a “.” as Kafka bootstrap servers&lt;/li&gt;
  &lt;li&gt;Ensure that Ditto pub/sub state is eventually consistent with a guaranteed upper time limit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following non-functional work is also included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Update of several used dependencies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please have a look at the &lt;a href=&quot;release_notes_230.html&quot;&gt;2.3.0 release notes&lt;/a&gt; for a more detailed information on the release.&lt;/p&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Ditto JavaScript client release was published on &lt;a href=&quot;https://www.npmjs.com/~eclipse_ditto&quot;&gt;npmjs.com&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-dom&quot;&gt;@eclipse-ditto/ditto-javascript-client-dom&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-node&quot;&gt;@eclipse-ditto/ditto-javascript-client-node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-concierge/&quot;&gt;eclipse/ditto-concierge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.dev/ditto/2022-01-21-release-announcement-230.html</link>
            <guid isPermaLink="true">https://www.eclipse.dev/ditto/2022-01-21-release-announcement-230.html</guid>
            
            <category>blog</category>
            
            
        </item>
        
        <item>
            <title>Conditionally direct retrieving API calls to either live or twin channel</title>
            <description>&lt;p&gt;After the added option to target the &lt;a href=&quot;protocol-twinlive.html#live&quot;&gt;live channel&lt;/a&gt; by adding the &lt;code class=&quot;highlighter-rouge&quot;&gt;channel=live&lt;/code&gt; to HTTP
requests (see also &lt;a href=&quot;2021-12-20-http-live-channel.html&quot;&gt;blog post about “HTTP live channel”&lt;/a&gt;), Eclipse Ditto 
&lt;strong&gt;version 2.3.0&lt;/strong&gt; will in addition support to define a 
&lt;a href=&quot;basic-conditional-requests.html#live-channel-condition&quot;&gt;live channel condition&lt;/a&gt;, which, when evaluating to &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;, 
will retrieve data from a device via the live channel, or fall back to the persisted &lt;a href=&quot;protocol-twinlive.html#twin&quot;&gt;twin&lt;/a&gt; 
otherwise.&lt;/p&gt;

&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot;&gt;&lt;i class=&quot;fa fa-info-circle&quot;&gt;&lt;/i&gt; &lt;b&gt;Note:&lt;/b&gt; In order to use the live channel, the device receiving live commands must be able to understand
    and answer in &lt;a href=&quot;protocol-specification.html&quot;&gt;Ditto Protocol messages&lt;/a&gt; with the
&lt;a href=&quot;protocol-specification-topic.html#live-channel&quot;&gt;topic’s channel being &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt;&lt;/a&gt;.&lt;/div&gt;

&lt;h2 id=&quot;relying-on-conditions&quot;&gt;Relying on conditions&lt;/h2&gt;

&lt;p&gt;Ditto 2.1.0 added support for &lt;a href=&quot;basic-conditional-requests.html&quot;&gt;conditional requests&lt;/a&gt; by e.g. specifying a &lt;code class=&quot;highlighter-rouge&quot;&gt;condition&lt;/code&gt;
query parameter for HTTP API calls.&lt;/p&gt;

&lt;p&gt;This mechanism can now additionally be used to formulate a condition through the query parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;live-channel-condition&lt;/code&gt;
whether data shall be retrieved via the &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; channel from the device.&lt;/p&gt;

&lt;h2 id=&quot;optionally-update-twin-automatically-based-on-retrieved-live-data&quot;&gt;Optionally update twin automatically based on retrieved live data&lt;/h2&gt;

&lt;p&gt;Whenever a device reports back its actual sensor readings, one can be sure that this data is the most recent “truth”.&lt;br /&gt;
It therefore is obvious to use that data in order to update the persisted twin managed by Ditto.&lt;/p&gt;

&lt;p&gt;This can optionally be enabled by configuring the new 
&lt;a href=&quot;connectivity-mapping.html#updatetwinwithliveresponse-mapper&quot;&gt;UpdateTwinWithLiveResponse mapper&lt;/a&gt; in a Ditto 
&lt;a href=&quot;basic-connections.html&quot;&gt;managed connection&lt;/a&gt;.&lt;br /&gt;
This mapper will transform each “live response” retrieving and transporting data from a device to an additional 
&lt;a href=&quot;protocol-specification-things-merge.html&quot;&gt;merge command&lt;/a&gt; modifying the twin with that &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; data.&lt;/p&gt;

&lt;h2 id=&quot;example-device-is-marked-to-be-polled&quot;&gt;Example: Device is marked to be polled&lt;/h2&gt;

&lt;p&gt;This is for example helpful if the device does not push its newest sensor readings actively into its twin 
representation managed by Ditto, but relies on being polled for the newest readings.&lt;br /&gt;
In that case, the twin could be marked e.g. as &lt;code class=&quot;highlighter-rouge&quot;&gt;attributes/polling-mode=true&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thingId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my.namespace:my-polling-device-1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;policyId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my.namespace:my-polling-device-1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;attributes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;polling-mode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;temperature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;23.42&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When an IoT application now needs to retrieve the latest temperature value, it can formulate a query (e.g. in HTTP):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /api/2/things/my.namespace:my-polling-device-1/features/temperature/properties/value
  ?live-channel-condition=eq(attributes/polling-mode,true)
  &amp;amp;timeout=10s
  &amp;amp;live-channel-timeout-strategy=use-twin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The specified &lt;code class=&quot;highlighter-rouge&quot;&gt;live-channel-condition&lt;/code&gt; will evaluate to &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;, meaning that the retrieve is transformed to a 
&lt;a href=&quot;protocol-twinlive.html#live&quot;&gt;live command&lt;/a&gt; and sent to the device, e.g. connected via a 
&lt;a href=&quot;basic-connections.html&quot;&gt;managed connection&lt;/a&gt;.&lt;br /&gt;
Upon receiving the “live retrieve” at the device, the device can create a command response correlated with the same
&lt;code class=&quot;highlighter-rouge&quot;&gt;correlation-id&lt;/code&gt; and send it back to Ditto with the current value.&lt;br /&gt;
This value is then returned as result of the &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt;, the HTTP response header &lt;code class=&quot;highlighter-rouge&quot;&gt;channel&lt;/code&gt; will indicate that the data was
sent by the device by having the value &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If the device does not answer with a correctly correlated response within the given &lt;code class=&quot;highlighter-rouge&quot;&gt;timeout&lt;/code&gt;, the request will fall back
to the &lt;a href=&quot;protocol-twinlive.html#twin&quot;&gt;twin&lt;/a&gt; channel, retrieving the data from the last known persisted temperature value 
in the twin managed by Ditto.&lt;br /&gt;
The HTTP response header &lt;code class=&quot;highlighter-rouge&quot;&gt;channel&lt;/code&gt; will indicate that the data was received by the persisted twin by having the value 
&lt;code class=&quot;highlighter-rouge&quot;&gt;twin&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;example-device-contains-a-connection-status&quot;&gt;Example: Device contains a connection status&lt;/h2&gt;

&lt;p&gt;Another perfect fit for that feature is when the device (or the device connectivity layer) is able to reflect the 
connection status of the device in the Ditto managed twin.&lt;br /&gt;
When e.g. using &lt;a href=&quot;https://www.eclipse.org/hono/&quot;&gt;Eclipse Hono&lt;/a&gt; in combination with Ditto, the 
&lt;a href=&quot;connectivity-mapping.html#connectionstatus-mapper&quot;&gt;ConnectionStatus&lt;/a&gt; mapper can be configured in a Ditto 
&lt;a href=&quot;basic-connections.html&quot;&gt;managed connection&lt;/a&gt; which will automatically update a &lt;a href=&quot;basic-thing.html#features&quot;&gt;feature&lt;/a&gt; in
the twin based on Hono’s &lt;a href=&quot;https://www.eclipse.org/hono/docs/concepts/device-notifications/&quot;&gt;device notifications&lt;/a&gt; 
reflecting a &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;readySince&quot;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;readyUntil&quot;&lt;/code&gt; timestamp:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thingId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my.namespace:my-connection-aware-device-1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;policyId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my.namespace:my-connection-aware-device-1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ConnectionStatus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.eclipse.ditto:ConnectionStatus:1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;readySince&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2021-12-22T14:16:18Z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;readyUntil&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;9999-12-31T23:59:59Z&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;temperature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;23.42&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In that case, the &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;readyUntil&quot;&lt;/code&gt; will contain a timestamp how long the device will be ready to receive commands, the 
timestamp &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;9999-12-31T23:59:59Z&quot;&lt;/code&gt; being an alias for indefinitely (once the device disconnects, e.g. from the MQTT 
adapter of Eclipse Hono, this timestamp will be set to the disconnection time).&lt;/p&gt;

&lt;p&gt;Utilizing this “connection awareness”, we can now easily define a query to retrieve data from the real device when it 
is connected and use the persisted &lt;code class=&quot;highlighter-rouge&quot;&gt;twin&lt;/code&gt; when it is not connected or runs into a timeout.&lt;br /&gt;
For using the current time as ISO-8601 timestamp, a new placeholder &lt;code class=&quot;highlighter-rouge&quot;&gt;time:now&lt;/code&gt; was also introduced, usable in RQL
expressions everywhere in Ditto:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /api/2/things/my.namespace:my-connection-aware-device-1/features/temperature/properties/value
  ?live-channel-condition=gt(features/ConnectionStatus/properties/status/readyUntil,time:now)
  &amp;amp;timeout=10s
  &amp;amp;live-channel-timeout-strategy=use-twin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Of course every other field in the persisted twin may also be used in the &lt;code class=&quot;highlighter-rouge&quot;&gt;live-channel-condition&lt;/code&gt;, if your devices e.g.
are aware if they are connected or not by other means (e.g. by setting an attribute), this can be utilized as well.&lt;/p&gt;

&lt;h2 id=&quot;feedback&quot;&gt;Feedback?&lt;/h2&gt;

&lt;p&gt;Please &lt;a href=&quot;feedback.html&quot;&gt;get in touch&lt;/a&gt; if you have feedback or questions towards this new functionality.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt; 
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.dev/ditto/2021-12-22-live-channel-condition.html</link>
            <guid isPermaLink="true">https://www.eclipse.dev/ditto/2021-12-22-live-channel-condition.html</guid>
            
            <category>blog</category>
            
            <category>http</category>
            
            
        </item>
        
    </channel>
</rss>
