<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Eclipse Ditto Blog</title>
        <description>Announcements, tutorials and examples around Eclipse Ditto and Digital Twins</description>
        <link>https://www.eclipse.org/ditto/</link>
        <atom:link href="https://www.eclipse.org/ditto/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Wed, 26 Oct 2022 11:49:50 +0000</pubDate>
        <lastBuildDate>Wed, 26 Oct 2022 11:49:50 +0000</lastBuildDate>
        <generator>Jekyll v3.6.2</generator>
        
        <item>
            <title>Announcing Eclipse Ditto Release 3.0.0</title>
            <description>&lt;p&gt;The Eclipse Ditto teams is proud to announce the availability of Eclipse Ditto 
&lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/3.0.0&quot;&gt;3.0.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With 3.0.0, the required amount of different service roles was reduced from 6 to only 5 as the “ditto-concierge” 
service’s responsibilities (performing authorization) was moved to other services.&lt;br /&gt;
That reduces the overall resource consumption and network traffic of a Ditto installation.&lt;/p&gt;

&lt;p&gt;The other big topic for version 3.0.0 is the new search index which does not only respond much quicker to search queries, 
but also brings lots of performance improvements regarding MongoDB utilization and also a huge stabilization regarding 
consistency of the search in Ditto.&lt;/p&gt;

&lt;p&gt;Many other new features and improvements are also part of the release, e.g. a new HTTP API for managing connections and
even the first version of a Ditto UI.&lt;/p&gt;

&lt;h2 id=&quot;adoption&quot;&gt;Adoption&lt;/h2&gt;

&lt;p&gt;Companies are willing to show their adoption of Eclipse Ditto publicly: 
&lt;a href=&quot;https://iot.eclipse.org/adopters/?#iot.ditto&quot;&gt;https://iot.eclipse.org/adopters/?#iot.ditto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From our various &lt;a href=&quot;feedback.html&quot;&gt;feedback channels&lt;/a&gt; we however know of more adoption.&lt;br /&gt;
If you are making use of Eclipse Ditto, it would be great to show this by adding your company name to that list of 
known adopters.&lt;br /&gt;
In the end, that’s one main way of measuring the success of the project.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;p&gt;The main improvements and additions of Ditto 3.0.0 are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ability to &lt;strong&gt;search in JSON arrays&lt;/strong&gt; and thus also for feature definitions&lt;/li&gt;
  &lt;li&gt;Several &lt;strong&gt;improvements around “metadata”&lt;/strong&gt; in Ditto managed things&lt;/li&gt;
  &lt;li&gt;Creation of &lt;strong&gt;new HTTP API for CRUD&lt;/strong&gt; management of Ditto managed &lt;strong&gt;connections&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Addition of &lt;strong&gt;Ditto explorer UI&lt;/strong&gt; for managing things, policies and connections&lt;/li&gt;
  &lt;li&gt;Support for EC signed JsonWebKeys (JWKs)&lt;/li&gt;
  &lt;li&gt;W3C WoT (Web of Things) adjustments and improvements for latest 1.1 “Candidate Recommendation” from W3C&lt;/li&gt;
  &lt;li&gt;Make “default namespace” for creating new entities configurable&lt;/li&gt;
  &lt;li&gt;Provide custom namespace when creating things via HTTP POST&lt;/li&gt;
  &lt;li&gt;Make it possible to provide multiple OIDC issuer urls for a single configured openid-connect “prefix”&lt;/li&gt;
  &lt;li&gt;Addition of a “CloudEvents” mapper for mapping CE payloads in Ditto connections&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following non-functional work is also included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;New Ditto &lt;strong&gt;“thing” search index&lt;/strong&gt; massively improving write performance; reducing the search consistency lag
and improving search query performance&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Removal of former “ditto-concierge” service&lt;/strong&gt;, moving its functionality to other Ditto services; reducing overall
resource consumption and improving latency+throughput for API calls&lt;/li&gt;
  &lt;li&gt;Creation of common way to extend Ditto via DittoExtensionPoints&lt;/li&gt;
  &lt;li&gt;Rewrite of Ditto managed &lt;strong&gt;MQTT connections to use reactive-streams based client&lt;/strong&gt;, supporting consumption applying
backpressure&lt;/li&gt;
  &lt;li&gt;Further improvements on rolling updates and other failover scenarios&lt;/li&gt;
  &lt;li&gt;Consolidate and simplify DevOps command responses&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following notable fixes are included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Passwords&lt;/strong&gt; stored in the URI of &lt;strong&gt;connections&lt;/strong&gt; to &lt;strong&gt;no longer need to be double encoded&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Using the &lt;code class=&quot;highlighter-rouge&quot;&gt;Normalized&lt;/code&gt; connection payload mapper together with enriched &lt;code class=&quot;highlighter-rouge&quot;&gt;extra&lt;/code&gt; fields lead to wrongly merged things&lt;/li&gt;
  &lt;li&gt;Adding custom Java based &lt;code class=&quot;highlighter-rouge&quot;&gt;MessageMappers&lt;/code&gt; to Ditto via classpath was no longer possible&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please have a look at the &lt;a href=&quot;release_notes_300.html&quot;&gt;3.0.0 release notes&lt;/a&gt; for a more detailed information on the release.&lt;/p&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Ditto JavaScript client release was published on &lt;a href=&quot;https://www.npmjs.com/~eclipse_ditto&quot;&gt;npmjs.com&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-dom&quot;&gt;@eclipse-ditto/ditto-javascript-client-dom&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-node&quot;&gt;@eclipse-ditto/ditto-javascript-client-node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.org/ditto/2022-09-28-release-announcement-300.html</link>
            <guid isPermaLink="true">https://www.eclipse.org/ditto/2022-09-28-release-announcement-300.html</guid>
            
            <category>blog</category>
            
            
        </item>
        
        <item>
            <title>Reactive MQTT Connectivity</title>
            <description>&lt;p&gt;The upcoming Eclipse Ditto version 3.0.0 will ship with a major refactoring of the MQTT
connectivity module.&lt;br /&gt;
In this post we want to highlight what’s new and why this could be interesting for you.&lt;/p&gt;

&lt;h2 id=&quot;backpressure-via-throttling&quot;&gt;Backpressure via throttling&lt;/h2&gt;
&lt;p&gt;The most noteworthy innovation is that Ditto now consumes incoming publish messages
by using the
&lt;a href=&quot;https://hivemq.github.io/hivemq-mqtt-client/docs/api-flavours/&quot;&gt;reactive API flavour of the HiveMQ client&lt;/a&gt;.&lt;br /&gt;
This, together with throttling, effectively enables &lt;em&gt;backpressure&lt;/em&gt; for inbound
MQTT publishes for protocol version 3.x and 5:&lt;/p&gt;

&lt;div class=&quot;language-config highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;connectivity&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;

…
&lt;span class=&quot;n&quot;&gt;throttling&lt;/span&gt; {
  &lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt; = &lt;span class=&quot;n&quot;&gt;true&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt; = ${?&lt;span class=&quot;n&quot;&gt;MQTT_CONSUMER_THROTTLING_ENABLED&lt;/span&gt;}

  &lt;span class=&quot;c&quot;&gt;# Interval at which the consumer is throttled. Must be &amp;gt; 0s.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;interval&lt;/span&gt; = ${?&lt;span class=&quot;n&quot;&gt;MQTT_CONSUMER_THROTTLING_INTERVAL&lt;/span&gt;}

  &lt;span class=&quot;c&quot;&gt;# The maximum number of messages the consumer is allowed to receive
&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# within the configured throttling interval e.g. 100 msgs/s.
&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# Must be &amp;gt; 0.
&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; = ${?&lt;span class=&quot;n&quot;&gt;MQTT_CONSUMER_THROTTLING_LIMIT&lt;/span&gt;}
}
…
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This kind of throttling applies to all in-flight messages – no matter what
their QoS is set to.&lt;br /&gt;
Backpressure protects Ditto from congestion caused by a too high amount of
incoming publishes.&lt;br /&gt;
Of course the broker has to deal with backpressure as well when throttling in
Ditto is enabled because the amount of unprocessed messages would pile up
at the broker.&lt;/p&gt;

&lt;h2 id=&quot;flow-control-with-receive-maximum-mqtt-5&quot;&gt;Flow Control with Receive Maximum (MQTT 5)&lt;/h2&gt;
&lt;p&gt;With MQTT 5 it is possible to specify a &lt;em&gt;Receive Maximum&lt;/em&gt; when the client
connects to the broker.&lt;br /&gt;
For QoS 1 or 2 this value determines how many unacknowledged incoming messages
the client accepts from the broker.&lt;br /&gt;
Apart from throttling this is an additional approach how Ditto can be protected
from excessive load – at least for MQTT 5 connections.&lt;br /&gt;
The (client) Receive Maximum can be set for Ditto either in configuration or
via environment variable:&lt;/p&gt;

&lt;div class=&quot;language-config highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;connectivity&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;

…
&lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;maximum&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;65535&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;maximum&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;client&lt;/span&gt; = ${?&lt;span class=&quot;n&quot;&gt;CONNECTIVITY_MQTT_CLIENT_RECEIVE_MAXIMUM&lt;/span&gt;}
…
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For more details, please have a look at
&lt;a href=&quot;https://www.hivemq.com/blog/mqtt5-essentials-part12-flow-control/&quot;&gt;HiveMQ’s MQTT 5 Essentials, Part 12&lt;/a&gt;
that covers just this topic.&lt;/p&gt;

&lt;h2 id=&quot;unified-implementation&quot;&gt;Unified implementation&lt;/h2&gt;
&lt;p&gt;Under the hood, almost anything related to MQTT changed.
With the previous implementation most of the logic was divided into a common
base implementation and a concrete implementation for protocol version 3.1.1
and 5.&lt;br /&gt;
Obviously this worked.&lt;br /&gt;
However, the algorithms were scattered over multiple classes which made it
difficult to understand what is going on (hello, maintainability 😉).&lt;/p&gt;

&lt;p&gt;Now, the distinction between protocol version 3.x and 5 is made on the level
of data structures.&lt;br /&gt;
Luckily the evolution of the MQTT protocol from version 3.1.1 to version 5
as well as the design of HiveMQ’s client library made this very easy.&lt;br /&gt;
For example, instead of dealing with a &lt;code class=&quot;highlighter-rouge&quot;&gt;Mqtt3Publish&lt;/code&gt; and a &lt;code class=&quot;highlighter-rouge&quot;&gt;Mqtt5Publish&lt;/code&gt; in
parallel all the time we introduced  a &lt;code class=&quot;highlighter-rouge&quot;&gt;GenericMqttPublish&lt;/code&gt; which can be
converted from and to the specific types at the time when they come in
contact with the client.&lt;br /&gt;
The rest of the time Ditto can work with the generic representation.&lt;/p&gt;

&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Tue, 12 Jul 2022 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.org/ditto/2022-07-12-reactive-mqtt.html</link>
            <guid isPermaLink="true">https://www.eclipse.org/ditto/2022-07-12-reactive-mqtt.html</guid>
            
            <category>blog</category>
            
            
        </item>
        
        <item>
            <title>Announcing Eclipse Ditto Release 2.4.0</title>
            <description>&lt;p&gt;The Eclipse Ditto teams announces availability of Eclipse Ditto &lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/2.4.0&quot;&gt;2.4.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The main topics in this release were the move from Java 11 to Java 17 (and the switch in Ditto’s pre-built Docker containers from OpenJ9 to Hotspot runtime), 
W3C WoT (Web of Things) integration and enhanced placeholder capabilities, e.g. used in JWT claim extraction and signal 
enrichment.&lt;/p&gt;

&lt;h2 id=&quot;adoption&quot;&gt;Adoption&lt;/h2&gt;

&lt;p&gt;Companies are willing to show their adoption of Eclipse Ditto publicly: 
&lt;a href=&quot;https://iot.eclipse.org/adopters/?#iot.ditto&quot;&gt;https://iot.eclipse.org/adopters/?#iot.ditto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From our various &lt;a href=&quot;feedback.html&quot;&gt;feedback channels&lt;/a&gt; we however know of more adoption.&lt;br /&gt;
If you are making use of Eclipse Ditto, it would be great to show this by adding your company name to that list of 
known adopters.&lt;br /&gt;
In the end, that’s one main way of measuring the success of the project.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;p&gt;The main improvements and additions of Ditto 2.4.0 are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;W3C WoT (Web of Things) integration&lt;/li&gt;
  &lt;li&gt;SSE (ServerSentEvent) API for subscribing to messages&lt;/li&gt;
  &lt;li&gt;Recovery status for connections indicating when e.g. recovery is no longer tried after max backoff&lt;/li&gt;
  &lt;li&gt;Enhance placeholders to resolve to multiple values&lt;/li&gt;
  &lt;li&gt;Advanced JWT placeholder operations&lt;/li&gt;
  &lt;li&gt;Support for a wildcard/placeholder identifying the changed feature in order to enrich e.g. its definition&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following notable fixes are included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Several fixes and improvements regarding consistency and performance of search updates&lt;/li&gt;
  &lt;li&gt;Don’t publish messages with failed enrichments and issue failed ack&lt;/li&gt;
  &lt;li&gt;Filter for incorrect element types in jsonArray of feature definitions&lt;/li&gt;
  &lt;li&gt;Fix of placeholder resolvment in “commandHeaders” of “ImplicitThingCreation” mapper&lt;/li&gt;
  &lt;li&gt;Fix &lt;code class=&quot;highlighter-rouge&quot;&gt;fn:substring-after()&lt;/code&gt; function returning incorrect data&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following non-functional work is also included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Upgrade of compiler target level for service modules from Java 11 to Java 17&lt;/li&gt;
  &lt;li&gt;Switch of used Java runtime in pre-built Docker containers from OpenJ9 to Hotspot&lt;/li&gt;
  &lt;li&gt;Publication of pre-built multi-architecture Docker images for &lt;code class=&quot;highlighter-rouge&quot;&gt;linux/amd64&lt;/code&gt; (as always) and now in addition &lt;code class=&quot;highlighter-rouge&quot;&gt;linux/arm64&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Removal of rate limiting / throttling limits as default&lt;/li&gt;
  &lt;li&gt;Update of several used dependencies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please have a look at the &lt;a href=&quot;release_notes_240.html&quot;&gt;2.4.0 release notes&lt;/a&gt; for a more detailed information on the release.&lt;/p&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Ditto JavaScript client release was published on &lt;a href=&quot;https://www.npmjs.com/~eclipse_ditto&quot;&gt;npmjs.com&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-dom&quot;&gt;@eclipse-ditto/ditto-javascript-client-dom&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-node&quot;&gt;@eclipse-ditto/ditto-javascript-client-node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-concierge/&quot;&gt;eclipse/ditto-concierge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Thu, 14 Apr 2022 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.org/ditto/2022-04-14-release-announcement-240.html</link>
            <guid isPermaLink="true">https://www.eclipse.org/ditto/2022-04-14-release-announcement-240.html</guid>
            
            <category>blog</category>
            
            
        </item>
        
        <item>
            <title>W3C WoT (Web of Things) integration</title>
            <description>&lt;p&gt;The upcoming Eclipse Ditto &lt;strong&gt;version 2.4.0&lt;/strong&gt; will add support for &lt;a href=&quot;https://www.w3.org/WoT/&quot;&gt;W3C WoT (Web of Things)&lt;/a&gt; 
integration by referencing WoT Thing Model in Ditto managed twins describing the Things’ capabilities.&lt;/p&gt;

&lt;p&gt;Using this integration, Ditto managed digital twins can be linked to WoT “Thing Models” from which Ditto can create 
WoT “Thing Descriptions” containing the API descriptions of the twins.&lt;/p&gt;

&lt;p&gt;By integrating WoT, Ditto takes a big step forward towards:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;increased interoperability&lt;/li&gt;
  &lt;li&gt;introspection of twins to find out their capabilities
    &lt;ul&gt;
      &lt;li&gt;which &lt;code class=&quot;highlighter-rouge&quot;&gt;properties&lt;/code&gt; are provided and their data type and format&lt;/li&gt;
      &lt;li&gt;which &lt;code class=&quot;highlighter-rouge&quot;&gt;actions&lt;/code&gt; can be invoked on the devices, including their expected input/output data type and format&lt;/li&gt;
      &lt;li&gt;which &lt;code class=&quot;highlighter-rouge&quot;&gt;events&lt;/code&gt; the devices are able to emit, including their data type and format&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;addition of semantic context to Ditto managed digital twins and their capabilities&lt;/li&gt;
  &lt;li&gt;description of Ditto twin HTTP APIs in an open, established, well specified, “web optimized”, active IoT standard&lt;/li&gt;
  &lt;li&gt;backing Ditto managed twins with WoT models, also supporting “brownfield” setups, without the need for actual devices to be aware of WoT&lt;/li&gt;
  &lt;li&gt;opening the door to a new ecosystem of tools&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To learn more about WoT (Web of Things), please visit: &lt;a href=&quot;https://www.w3.org/WoT/documentation/&quot;&gt;Web of Things in a Nutshell&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;wot-integration-in-ditto&quot;&gt;WoT integration in Ditto&lt;/h2&gt;

&lt;p&gt;The WoT integration in Ditto covers several aspects:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;referencing HTTP(s) URLs to WoT Thing Models in &lt;a href=&quot;basic-thing.html#definition&quot;&gt;Thing Definitions&lt;/a&gt; and in &lt;a href=&quot;basic-feature.html#feature-definition&quot;&gt;Feature Definitions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;generation of WoT Thing Descriptions for Thing and Feature instances based on referenced Thing Models
    &lt;ul&gt;
      &lt;li&gt;resolving potential &lt;a href=&quot;https://www.w3.org/TR/2022/WD-wot-thing-description11-20220311/#thing-model-extension-import&quot;&gt;extensions via &lt;code class=&quot;highlighter-rouge&quot;&gt;tm:extends&lt;/code&gt; and imports via &lt;code class=&quot;highlighter-rouge&quot;&gt;tm:ref&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;resolving potential Thing level &lt;a href=&quot;https://www.w3.org/TR/2022/WD-wot-thing-description11-20220311/#thing-model-composition&quot;&gt;compositions via &lt;code class=&quot;highlighter-rouge&quot;&gt;tm:submodel&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;resolving potential &lt;a href=&quot;https://www.w3.org/TR/2022/WD-wot-thing-description11-20220311/#thing-model-td-placeholder&quot;&gt;TM placeholders&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;upon creation of new Things, generation of a “JSON skeleton” following the WoT Thing Model, including referenced 
TM submodels as Features of the Thing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For additional details about the WoT integration, please check the full 
&lt;a href=&quot;basic-wot-integration.html&quot;&gt;WoT integration documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The WoT integration is still marked as “experimental” as the WoT Thing Description version 1.1 is not yet published as
“W3C Recommendation” and may still change - as well as the implementation of the standard in Ditto.&lt;/p&gt;

&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot;&gt;&lt;i class=&quot;fa fa-info-circle&quot;&gt;&lt;/i&gt; &lt;b&gt;Note:&lt;/b&gt; In order to enable the &lt;strong&gt;experimental&lt;/strong&gt; support for WoT in Ditto &lt;code class=&quot;highlighter-rouge&quot;&gt;2.4.0&lt;/code&gt;, please
      configure the environment variable &lt;code class=&quot;highlighter-rouge&quot;&gt;DITTO_DEVOPS_FEATURE_WOT_INTEGRATION_ENABLED&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;.&lt;/div&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;

&lt;p&gt;For a full example of the different aspects of the WoT integration, please check the full 
&lt;a href=&quot;basic-wot-integration-example.html&quot;&gt;WoT integration example&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To summarize:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;“link” a Thing with a publicly available WoT Thing Model by specifying the URL in its &lt;a href=&quot;basic-thing.html#definition&quot;&gt;Thing Definition&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;creation of a new Thing can use a Thing Model (e.g. the example model &lt;a href=&quot;https://eclipse.github.io/ditto-examples/wot/models/floor-lamp-1.0.0.tm.jsonld&quot;&gt;https://eclipse.github.io/ditto-examples/wot/models/floor-lamp-1.0.0.tm.jsonld&lt;/a&gt;) in order to generate a JSON skeleton:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  curl &lt;span class=&quot;nt&quot;&gt;--location&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--request&lt;/span&gt; PUT &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; ditto:ditto &lt;span class=&quot;s1&quot;&gt;'https://ditto.eclipseprojects.io/api/2/things/io.eclipseprojects.ditto:floor-lamp-0815'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--header&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Content-Type: application/json'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;--data-raw&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{
      &quot;definition&quot;: &quot;https://eclipse.github.io/ditto-examples/wot/models/floor-lamp-1.0.0.tm.jsonld&quot;
  }'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;which results in a Thing like this:
    &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thingId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;io.eclipseprojects.ditto:floor-lamp-0815&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;policyId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;io.eclipseprojects.ditto:floor-lamp-0815&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse.github.io/ditto-examples/wot/models/floor-lamp-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;attributes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;manufacturer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;serialNo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Spot1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse.github.io/ditto-examples/wot/models/dimmable-colored-lamp-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse.github.io/ditto-examples/wot/models/colored-lamp-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse.github.io/ditto-examples/wot/models/switchable-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dimmer-level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;color&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;g&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;on&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Spot2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse.github.io/ditto-examples/wot/models/dimmable-colored-lamp-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse.github.io/ditto-examples/wot/models/colored-lamp-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse.github.io/ditto-examples/wot/models/switchable-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dimmer-level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;color&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;g&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;on&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Spot3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse.github.io/ditto-examples/wot/models/dimmable-colored-lamp-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse.github.io/ditto-examples/wot/models/colored-lamp-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse.github.io/ditto-examples/wot/models/switchable-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dimmer-level&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;color&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;g&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;on&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ConnectionStatus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse.github.io/ditto-examples/wot/models/connection-status-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;readySince&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;readyUntil&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PowerConsumptionAwareness&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse.github.io/ditto-examples/wot/models/power-consumption-aware-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;reportPowerConsumption&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SmokeDetection&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse.github.io/ditto-examples/wot/models/smoke-detector-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Status-LED&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse.github.io/ditto-examples/wot/models/colored-lamp-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://eclipse.github.io/ditto-examples/wot/models/switchable-1.0.0.tm.jsonld&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;color&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;g&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;on&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;the WoT Thing Description of Things containing a Thing Model in their &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;definition&quot;&lt;/code&gt; may then be retrieved by invoking 
the existing endpoint&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;GET /api/2/things/&amp;lt;thingId&amp;gt;&lt;/code&gt; with the &lt;code class=&quot;highlighter-rouge&quot;&gt;Accept&lt;/code&gt; header &lt;code class=&quot;highlighter-rouge&quot;&gt;application/td+json&lt;/code&gt;:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;--location&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--request&lt;/span&gt; GET &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; ditto:ditto &lt;span class=&quot;s1&quot;&gt;'https://ditto.eclipseprojects.io/api/2/things/io.eclipseprojects.ditto:floor-lamp-0815'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--header&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Accept: application/td+json'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Features of Things are handled as WoT “submodels” and also can describe themselves with the same approach, e.g.:
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;--location&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--request&lt;/span&gt; GET &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; ditto:ditto &lt;span class=&quot;s1&quot;&gt;'https://ditto.eclipseprojects.io/api/2/things/io.eclipseprojects.ditto:floor-lamp-0815/features/Spot1'&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--header&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Accept: application/td+json'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;ditto-wot-java-model&quot;&gt;Ditto WoT Java model&lt;/h2&gt;

&lt;p&gt;As part of the integration of WoT in Ditto, a Java module has been added to provide a Java API for the WoT 
“Thing Description”/”Thing Model” and their parts - this module can also be used separately from Ditto in order to
e.g. have a builder based API for building new objects or to read a TD/TM from a string:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.eclipse.ditto&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;ditto-wot-model&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;${ditto.version}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- the ditto-wot-model is available since &quot;ditto.version&quot; 2.4.0 --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Please have a look at the added &lt;a href=&quot;https://github.com/eclipse/ditto/tree/master/wot/model&quot;&gt;ditto-wot-model module&lt;/a&gt; to find
out more about example usage.&lt;/p&gt;

&lt;h2 id=&quot;feedback&quot;&gt;Feedback?&lt;/h2&gt;

&lt;p&gt;Please &lt;a href=&quot;feedback.html&quot;&gt;get in touch&lt;/a&gt; if you have feedback or questions towards this new functionality.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt; 
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Thu, 03 Mar 2022 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.org/ditto/2022-03-03-wot-integration.html</link>
            <guid isPermaLink="true">https://www.eclipse.org/ditto/2022-03-03-wot-integration.html</guid>
            
            <category>blog</category>
            
            <category>wot</category>
            
            <category>http</category>
            
            
        </item>
        
        <item>
            <title>Announcing Eclipse Ditto Release 2.3.0</title>
            <description>&lt;p&gt;The Eclipse Ditto teams announces availability of Eclipse Ditto &lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/2.3.0&quot;&gt;2.3.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It contains mainly new features around the Ditto &lt;a href=&quot;protocol-twinlive.html#live&quot;&gt;“live” channel&lt;/a&gt; which can be used to 
directly interact with devices.&lt;/p&gt;

&lt;p&gt;Such live commands may now be easily &lt;a href=&quot;2021-12-20-http-live-channel.html&quot;&gt;created via the HTTP API&lt;/a&gt; - and in addition
a conventional API call targeting the persisted &lt;a href=&quot;protocol-twinlive.html#twin&quot;&gt;twin&lt;/a&gt; may now be automatically converted
to a live command, based on a passed &lt;a href=&quot;2021-12-22-live-channel-condition.html&quot;&gt;live channel condition&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;With that, we are proud that we now can provide a really powerful addition to Ditto’s “Digital Twin pattern”:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;requesting data from an actual device e.g. when it is currently connected/online (based on a &lt;a href=&quot;basic-conditional-requests.html#live-channel-condition&quot;&gt;live channel condition&lt;/a&gt; targeting the online status)&lt;/li&gt;
  &lt;li&gt;fall back to its last known persisted state
    &lt;ul&gt;
      &lt;li&gt;if it is currently not online (the condition did not match)&lt;/li&gt;
      &lt;li&gt;or also as a fallback, if the device does not answer within e.g. 10 seconds&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;all that within one single API call, including information from which source the data was reported back
    &lt;ul&gt;
      &lt;li&gt;the “live” device or the persisted “twin”&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;adoption&quot;&gt;Adoption&lt;/h2&gt;

&lt;p&gt;Companies are willing to show their adoption of Eclipse Ditto publicly: &lt;a href=&quot;https://iot.eclipse.org/adopters/?#iot.ditto&quot;&gt;https://iot.eclipse.org/adopters/?#iot.ditto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From our various &lt;a href=&quot;feedback.html&quot;&gt;feedback channels&lt;/a&gt; we however know of more adoption.&lt;br /&gt;
If you are making use of Eclipse Ditto, it would be great to show this by adding your company name to that list of 
known adopters.&lt;br /&gt;
In the end, that’s one main way of measuring the success of the project.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;p&gt;The main improvements and additions of Ditto 2.3.0 are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HTTP API for “live” commands&lt;/li&gt;
  &lt;li&gt;Smart channel strategy for live/twin read access&lt;/li&gt;
  &lt;li&gt;Configurable allowing creation of entities (policies/things) based on namespace and authenticated subjects&lt;/li&gt;
  &lt;li&gt;Allow using &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; as a placeholder for the feature id in selected fields&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following notable fixes are included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fix potential concurrent modification errors when using JavaScript payload mapping and global variables&lt;/li&gt;
  &lt;li&gt;Fix reconnect backoff for Kafka connections with authentication failures&lt;/li&gt;
  &lt;li&gt;Fix caching of JWTs in HTTP push connections&lt;/li&gt;
  &lt;li&gt;Fix potentially unreachable client actors in connections with &lt;code class=&quot;highlighter-rouge&quot;&gt;clientCount &amp;gt; 1&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Fix search inconsistencies for very active things during shard relocation (e.g. on rolling updates)&lt;/li&gt;
  &lt;li&gt;Fix that a Kafka connection with only targets remains “open” even if Kafka broker is not available&lt;/li&gt;
  &lt;li&gt;Allow usage of absolute domain paths ending with a “.” as Kafka bootstrap servers&lt;/li&gt;
  &lt;li&gt;Ensure that Ditto pub/sub state is eventually consistent with a guaranteed upper time limit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following non-functional work is also included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Update of several used dependencies&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please have a look at the &lt;a href=&quot;release_notes_230.html&quot;&gt;2.3.0 release notes&lt;/a&gt; for a more detailed information on the release.&lt;/p&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Ditto JavaScript client release was published on &lt;a href=&quot;https://www.npmjs.com/~eclipse_ditto&quot;&gt;npmjs.com&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-dom&quot;&gt;@eclipse-ditto/ditto-javascript-client-dom&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-node&quot;&gt;@eclipse-ditto/ditto-javascript-client-node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-concierge/&quot;&gt;eclipse/ditto-concierge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Fri, 21 Jan 2022 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.org/ditto/2022-01-21-release-announcement-230.html</link>
            <guid isPermaLink="true">https://www.eclipse.org/ditto/2022-01-21-release-announcement-230.html</guid>
            
            <category>blog</category>
            
            
        </item>
        
        <item>
            <title>Conditionally direct retrieving API calls to either live or twin channel</title>
            <description>&lt;p&gt;After the added option to target the &lt;a href=&quot;protocol-twinlive.html#live&quot;&gt;live channel&lt;/a&gt; by adding the &lt;code class=&quot;highlighter-rouge&quot;&gt;channel=live&lt;/code&gt; to HTTP
requests (see also &lt;a href=&quot;2021-12-20-http-live-channel.html&quot;&gt;blog post about “HTTP live channel”&lt;/a&gt;), Eclipse Ditto 
&lt;strong&gt;version 2.3.0&lt;/strong&gt; will in addition support to define a 
&lt;a href=&quot;basic-conditional-requests.html#live-channel-condition&quot;&gt;live channel condition&lt;/a&gt;, which, when evaluating to &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;, 
will retrieve data from a device via the live channel, or fall back to the persisted &lt;a href=&quot;protocol-twinlive.html#twin&quot;&gt;twin&lt;/a&gt; 
otherwise.&lt;/p&gt;

&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot;&gt;&lt;i class=&quot;fa fa-info-circle&quot;&gt;&lt;/i&gt; &lt;b&gt;Note:&lt;/b&gt; In order to use the live channel, the device receiving live commands must be able to understand
    and answer in &lt;a href=&quot;protocol-specification.html&quot;&gt;Ditto Protocol messages&lt;/a&gt; with the
&lt;a href=&quot;protocol-specification-topic.html#live-channel&quot;&gt;topic’s channel being &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt;&lt;/a&gt;.&lt;/div&gt;

&lt;h2 id=&quot;relying-on-conditions&quot;&gt;Relying on conditions&lt;/h2&gt;

&lt;p&gt;Ditto 2.1.0 added support for &lt;a href=&quot;basic-conditional-requests.html&quot;&gt;conditional requests&lt;/a&gt; by e.g. specifying a &lt;code class=&quot;highlighter-rouge&quot;&gt;condition&lt;/code&gt;
query parameter for HTTP API calls.&lt;/p&gt;

&lt;p&gt;This mechanism can now additionally be used to formulate a condition through the query parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;live-channel-condition&lt;/code&gt;
whether data shall be retrieved via the &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; channel from the device.&lt;/p&gt;

&lt;h2 id=&quot;optionally-update-twin-automatically-based-on-retrieved-live-data&quot;&gt;Optionally update twin automatically based on retrieved live data&lt;/h2&gt;

&lt;p&gt;Whenever a device reports back its actual sensor readings, one can be sure that this data is the most recent “truth”.&lt;br /&gt;
It therefore is obvious to use that data in order to update the persisted twin managed by Ditto.&lt;/p&gt;

&lt;p&gt;This can optionally be enabled by configuring the new 
&lt;a href=&quot;connectivity-mapping.html#updatetwinwithliveresponse-mapper&quot;&gt;UpdateTwinWithLiveResponse mapper&lt;/a&gt; in a Ditto 
&lt;a href=&quot;basic-connections.html&quot;&gt;managed connection&lt;/a&gt;.&lt;br /&gt;
This mapper will transform each “live response” retrieving and transporting data from a device to an additional 
&lt;a href=&quot;protocol-specification-things-merge.html&quot;&gt;merge command&lt;/a&gt; modifying the twin with that &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; data.&lt;/p&gt;

&lt;h2 id=&quot;example-device-is-marked-to-be-polled&quot;&gt;Example: Device is marked to be polled&lt;/h2&gt;

&lt;p&gt;This is for example helpful if the device does not push its newest sensor readings actively into its twin 
representation managed by Ditto, but relies on being polled for the newest readings.&lt;br /&gt;
In that case, the twin could be marked e.g. as &lt;code class=&quot;highlighter-rouge&quot;&gt;attributes/polling-mode=true&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thingId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my.namespace:my-polling-device-1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;policyId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my.namespace:my-polling-device-1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;attributes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;polling-mode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;temperature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;23.42&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When an IoT application now needs to retrieve the latest temperature value, it can formulate a query (e.g. in HTTP):&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /api/2/things/my.namespace:my-polling-device-1/features/temperature/properties/value
  ?live-channel-condition=eq(attributes/polling-mode,true)
  &amp;amp;timeout=10s
  &amp;amp;live-channel-timeout-strategy=use-twin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The specified &lt;code class=&quot;highlighter-rouge&quot;&gt;live-channel-condition&lt;/code&gt; will evaluate to &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;, meaning that the retrieve is transformed to a 
&lt;a href=&quot;protocol-twinlive.html#live&quot;&gt;live command&lt;/a&gt; and sent to the device, e.g. connected via a 
&lt;a href=&quot;basic-connections.html&quot;&gt;managed connection&lt;/a&gt;.&lt;br /&gt;
Upon receiving the “live retrieve” at the device, the device can create a command response correlated with the same
&lt;code class=&quot;highlighter-rouge&quot;&gt;correlation-id&lt;/code&gt; and send it back to Ditto with the current value.&lt;br /&gt;
This value is then returned as result of the &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt;, the HTTP response header &lt;code class=&quot;highlighter-rouge&quot;&gt;channel&lt;/code&gt; will indicate that the data was
sent by the device by having the value &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If the device does not answer with a correctly correlated response within the given &lt;code class=&quot;highlighter-rouge&quot;&gt;timeout&lt;/code&gt;, the request will fall back
to the &lt;a href=&quot;protocol-twinlive.html#twin&quot;&gt;twin&lt;/a&gt; channel, retrieving the data from the last known persisted temperature value 
in the twin managed by Ditto.&lt;br /&gt;
The HTTP response header &lt;code class=&quot;highlighter-rouge&quot;&gt;channel&lt;/code&gt; will indicate that the data was received by the persisted twin by having the value 
&lt;code class=&quot;highlighter-rouge&quot;&gt;twin&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;example-device-contains-a-connection-status&quot;&gt;Example: Device contains a connection status&lt;/h2&gt;

&lt;p&gt;Another perfect fit for that feature is when the device (or the device connectivity layer) is able to reflect the 
connection status of the device in the Ditto managed twin.&lt;br /&gt;
When e.g. using &lt;a href=&quot;https://www.eclipse.org/hono/&quot;&gt;Eclipse Hono&lt;/a&gt; in combination with Ditto, the 
&lt;a href=&quot;connectivity-mapping.html#connectionstatus-mapper&quot;&gt;ConnectionStatus&lt;/a&gt; mapper can be configured in a Ditto 
&lt;a href=&quot;basic-connections.html&quot;&gt;managed connection&lt;/a&gt; which will automatically update a &lt;a href=&quot;basic-thing.html#features&quot;&gt;feature&lt;/a&gt; in
the twin based on Hono’s &lt;a href=&quot;https://www.eclipse.org/hono/docs/concepts/device-notifications/&quot;&gt;device notifications&lt;/a&gt; 
reflecting a &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;readySince&quot;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;readyUntil&quot;&lt;/code&gt; timestamp:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thingId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my.namespace:my-connection-aware-device-1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;policyId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my.namespace:my-connection-aware-device-1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ConnectionStatus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;definition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.eclipse.ditto:ConnectionStatus:1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;readySince&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2021-12-22T14:16:18Z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;readyUntil&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;9999-12-31T23:59:59Z&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;temperature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;23.42&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In that case, the &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;readyUntil&quot;&lt;/code&gt; will contain a timestamp how long the device will be ready to receive commands, the 
timestamp &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;9999-12-31T23:59:59Z&quot;&lt;/code&gt; being an alias for indefinitely (once the device disconnects, e.g. from the MQTT 
adapter of Eclipse Hono, this timestamp will be set to the disconnection time).&lt;/p&gt;

&lt;p&gt;Utilizing this “connection awareness”, we can now easily define a query to retrieve data from the real device when it 
is connected and use the persisted &lt;code class=&quot;highlighter-rouge&quot;&gt;twin&lt;/code&gt; when it is not connected or runs into a timeout.&lt;br /&gt;
For using the current time as ISO-8601 timestamp, a new placeholder &lt;code class=&quot;highlighter-rouge&quot;&gt;time:now&lt;/code&gt; was also introduced, usable in RQL
expressions everywhere in Ditto:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /api/2/things/my.namespace:my-connection-aware-device-1/features/temperature/properties/value
  ?live-channel-condition=gt(features/ConnectionStatus/properties/status/readyUntil,time:now)
  &amp;amp;timeout=10s
  &amp;amp;live-channel-timeout-strategy=use-twin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Of course every other field in the persisted twin may also be used in the &lt;code class=&quot;highlighter-rouge&quot;&gt;live-channel-condition&lt;/code&gt;, if your devices e.g.
are aware if they are connected or not by other means (e.g. by setting an attribute), this can be utilized as well.&lt;/p&gt;

&lt;h2 id=&quot;feedback&quot;&gt;Feedback?&lt;/h2&gt;

&lt;p&gt;Please &lt;a href=&quot;feedback.html&quot;&gt;get in touch&lt;/a&gt; if you have feedback or questions towards this new functionality.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt; 
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.org/ditto/2021-12-22-live-channel-condition.html</link>
            <guid isPermaLink="true">https://www.eclipse.org/ditto/2021-12-22-live-channel-condition.html</guid>
            
            <category>blog</category>
            
            <category>http</category>
            
            
        </item>
        
        <item>
            <title>Sending live channel commands via HTTP to devices</title>
            <description>&lt;p&gt;The upcoming release of Eclipse Ditto &lt;strong&gt;version 2.3.0&lt;/strong&gt; will support sending commands via the HTTP API 
directly to devices using the &lt;a href=&quot;protocol-twinlive.html#live&quot;&gt;live channel&lt;/a&gt; by just adding the &lt;code class=&quot;highlighter-rouge&quot;&gt;channel=live&lt;/code&gt; 
query parameter to the same HTTP API request which would target the &lt;a href=&quot;protocol-twinlive.html#twin&quot;&gt;twin&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;http-live-channel&quot;&gt;HTTP Live channel&lt;/h2&gt;

&lt;p&gt;Ditto supports sending all kind of &lt;a href=&quot;protocol-specification-things.html#commands&quot;&gt;Thing commands&lt;/a&gt; via
the &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; channel directly to devices.
When sending a &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; command to  a device, the device is responsible for sending a correlated and correct response 
in &lt;a href=&quot;protocol-overview.html&quot;&gt;Ditto Protocol&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ditto supports two types of &lt;code class=&quot;highlighter-rouge&quot;&gt;channel&lt;/code&gt;s for communication.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;protocol-twinlive.html#twin&quot;&gt;twin&lt;/a&gt;: The default value of the channel parameter is &lt;code class=&quot;highlighter-rouge&quot;&gt;twin&lt;/code&gt; 
to communicate with the persisted &lt;strong&gt;twin&lt;/strong&gt; representation.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;protocol-twinlive.html#live&quot;&gt;live&lt;/a&gt;: The &lt;code class=&quot;highlighter-rouge&quot;&gt;channel&lt;/code&gt; parameter can be changed to &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; 
to communicate with the real device.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;alert alert-info&quot; role=&quot;alert&quot;&gt;&lt;i class=&quot;fa fa-info-circle&quot;&gt;&lt;/i&gt; &lt;b&gt;Note:&lt;/b&gt; In order to use the live channel, the device receiving live commands must be able to understand
  and answer in &lt;a href=&quot;protocol-specification.html&quot;&gt;Ditto Protocol messages&lt;/a&gt; with the
&lt;a href=&quot;protocol-specification-topic.html#live-channel&quot;&gt;topic’s channel being &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt;&lt;/a&gt;.&lt;/div&gt;

&lt;p&gt;When using the &lt;code class=&quot;highlighter-rouge&quot;&gt;twin&lt;/code&gt; channel, the command is routed to the Ditto backend and handled by the &lt;strong&gt;twin&lt;/strong&gt; persistence.
Before using the &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; channel, it is necessary to create the &lt;strong&gt;digital twin&lt;/strong&gt; of the device in the 
Ditto backend.&lt;/p&gt;

&lt;p&gt;If the &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; channel is used, the command is directly routed to the device. In this case the device is 
responsible for answering the command and sending back a response. In case no response is sent back, the Ditto HTTP API 
is responding with &lt;code class=&quot;highlighter-rouge&quot;&gt;408 Request Timeout&lt;/code&gt;.&lt;br /&gt;
The default timeout for live commands is &lt;code class=&quot;highlighter-rouge&quot;&gt;10s&lt;/code&gt; but it can be changed by setting the &lt;code class=&quot;highlighter-rouge&quot;&gt;timeout&lt;/code&gt; parameter to the 
desired value.&lt;/p&gt;

&lt;p&gt;Ditto ensures that the &lt;code class=&quot;highlighter-rouge&quot;&gt;correlation ID&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;entity ID&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;command response type&lt;/code&gt; of the command response 
is the same as in the sending command. If this is not the case, Ditto is dropping the response and the caller of the 
HTTP request will get a &lt;code class=&quot;highlighter-rouge&quot;&gt;408 Request Timeout&lt;/code&gt; with a message that the timeout was caused by an incompatible
command response from the device.&lt;/p&gt;

&lt;h3 id=&quot;permissions-for-live-commands&quot;&gt;Permissions for live commands&lt;/h3&gt;

&lt;p&gt;Sending live commands to devices is restricted by the policy of the thing.&lt;br /&gt;
Thus Ditto ensures that only authorized parties with &lt;code class=&quot;highlighter-rouge&quot;&gt;WRITE&lt;/code&gt; permission are able to send commands or messages.&lt;br /&gt;
Ditto also filters responses from the device based on the policy. This ensures that the requester only gets the data
where he/she has &lt;code class=&quot;highlighter-rouge&quot;&gt;READ&lt;/code&gt; permission on.&lt;/p&gt;

&lt;p&gt;For retrieve commands, the &lt;a href=&quot;basic-auth.html#authenticated-subjects&quot;&gt;authenticated subject&lt;/a&gt; needs to have 
(at least partial) &lt;code class=&quot;highlighter-rouge&quot;&gt;READ&lt;/code&gt; permission at the resource which is requested.&lt;br /&gt;
In case a &lt;code class=&quot;highlighter-rouge&quot;&gt;RetrieveThing&lt;/code&gt; (via HTTP a &lt;code class=&quot;highlighter-rouge&quot;&gt;GET /api/2/things/&amp;lt;thing-id&amp;gt;&lt;/code&gt;) command is sent to a real device and the 
requester only has partial &lt;code class=&quot;highlighter-rouge&quot;&gt;READ&lt;/code&gt; permission on the thing, the response is filtered based on the policy 
and only the fields where &lt;code class=&quot;highlighter-rouge&quot;&gt;READ&lt;/code&gt; permission is granted are returned.&lt;/p&gt;

&lt;h3 id=&quot;live-commands-via-http-api&quot;&gt;Live commands via HTTP API&lt;/h3&gt;

&lt;p&gt;When using the HTTP API the &lt;code class=&quot;highlighter-rouge&quot;&gt;channel&lt;/code&gt; parameter can either be specified via HTTP Header or via HTTP query parameter.&lt;br /&gt;
In the examples below both ways are possible to specify the channel parameter.&lt;/p&gt;

&lt;h4 id=&quot;live-command-with-http-header&quot;&gt;Live command with HTTP Header&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; GET &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'channel: live'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'timeout: 30s'&lt;/span&gt; /api/2/things/org.eclipse.ditto:coffeebrewer&lt;span class=&quot;s1&quot;&gt;'
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;live-command-with-http-query-parameter&quot;&gt;Live command with HTTP query parameter&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; GET /api/2/things/org.eclipse.ditto:coffeebrewer?channel&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;live&amp;amp;timeout&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;30s&lt;span class=&quot;s1&quot;&gt;'
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;example&quot;&gt;Example&lt;/h2&gt;

&lt;p&gt;The following section provides an example how to use the HTTP &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; channel together with the Ditto Java client.&lt;/p&gt;

&lt;p&gt;For demonstration purpose, we assume that the thing with ID &lt;code class=&quot;highlighter-rouge&quot;&gt;org.eclipse.ditto:outdoor-sensor&lt;/code&gt; already exists.&lt;/p&gt;

&lt;p&gt;In this example we want to retrieve the live state of the device by sending a &lt;code class=&quot;highlighter-rouge&quot;&gt;RetrieveThing&lt;/code&gt; command via
the &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; channel directly to the device.&lt;/p&gt;

&lt;h3 id=&quot;permissions-to-execute-the-example&quot;&gt;Permissions to execute the example&lt;/h3&gt;

&lt;p&gt;For this example, the &lt;a href=&quot;basic-auth.html#authenticated-subjects&quot;&gt;authenticated subject&lt;/a&gt; has
&lt;code class=&quot;highlighter-rouge&quot;&gt;READ&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;WRITE&lt;/code&gt; permissions on the complete thing resource to send the command and retrieve the full response.&lt;/p&gt;

&lt;h3 id=&quot;executing-the-example&quot;&gt;Executing the example&lt;/h3&gt;

&lt;p&gt;When sending a command over the &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; channel to a device, the device needs to take action and send back a response.&lt;br /&gt;
The response from the device is routed back to the initial requester of the &lt;code class=&quot;highlighter-rouge&quot;&gt;live&lt;/code&gt; command at the HTTP API.&lt;/p&gt;

&lt;p&gt;In this example the &lt;a href=&quot;client-sdk-java.html&quot;&gt;Ditto Java Client&lt;/a&gt; acts as device and sends back the response.&lt;br /&gt;
The following snippet shows how to register for retrieve thing live commands and send back a &lt;code class=&quot;highlighter-rouge&quot;&gt;RetrieveThingResponse&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thingId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;org.eclipse.ditto:outdoor-sensor&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;featureId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;environment-sensor&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Attributes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Attributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;location&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;outdoor in the woods&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Feature&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;feature&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThingsModelFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newFeatureBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ThingsModelFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newFeaturePropertiesBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;temperature&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;9.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;humidity&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;56.3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;featureId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Thing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thing&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThingsModelFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;newThingBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thingId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setFeature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;feature&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setAttributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// initialize the ditto-client and startConsumption() of live commands&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DittoClient&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dittoClient&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;dittoClient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;live&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thingId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;handleRetrieveThingCommandsFunction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;retrieveThingLiveCommand&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;retrieveThingLiveCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;withResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;retrieved&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When the above shown code snippet is running and the following HTTP request is sent out:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-X&lt;/span&gt; GET /api/2/things/org.eclipse.ditto:outdoor-sensor?channel&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;live&amp;amp;timeout&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;15s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The received HTTP response payload should look like this:&lt;/p&gt;
&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thingId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.eclipse.ditto:outdoor-sensor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;_namespace&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;org.eclipse.ditto&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;attributes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;location&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;outdoor in the woods&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;features&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;environment-sensor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;properties&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;temperature&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;9.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;humidity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;56.3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;feedback&quot;&gt;Feedback?&lt;/h2&gt;

&lt;p&gt;Please &lt;a href=&quot;feedback.html&quot;&gt;get in touch&lt;/a&gt; if you have feedback or questions towards this new functionality.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt; 
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.org/ditto/2021-12-20-http-live-channel.html</link>
            <guid isPermaLink="true">https://www.eclipse.org/ditto/2021-12-20-http-live-channel.html</guid>
            
            <category>blog</category>
            
            <category>http</category>
            
            
        </item>
        
        <item>
            <title>Announcing Eclipse Ditto Release 2.2.0</title>
            <description>&lt;p&gt;The Eclipse Ditto teams announces availability of Eclipse Ditto &lt;a href=&quot;https://projects.eclipse.org/projects/iot.ditto/releases/2.2.0&quot;&gt;2.2.0&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It features several nice added features and e.g. allows using the dash &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; in the namespace part of thing IDs.&lt;/p&gt;

&lt;h2 id=&quot;adoption&quot;&gt;Adoption&lt;/h2&gt;

&lt;p&gt;Companies are willing to show their adoption of Eclipse Ditto publicly: &lt;a href=&quot;https://iot.eclipse.org/adopters/?#iot.ditto&quot;&gt;https://iot.eclipse.org/adopters/?#iot.ditto&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;From our various &lt;a href=&quot;feedback.html&quot;&gt;feedback channels&lt;/a&gt; we however know of more adoption.&lt;br /&gt;
If you are making use of Eclipse Ditto, it would be great to show this by adding your company name to that list of 
known adopters.&lt;br /&gt;
In the end, that’s one main way of measuring the success of the project.&lt;/p&gt;

&lt;h2 id=&quot;changelog&quot;&gt;Changelog&lt;/h2&gt;

&lt;p&gt;The main improvements and additions of Ditto 2.2.0 are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Filter for twin life-cycle events like e.g. “thing created” or “feature deleted” via RQL expressions&lt;/li&gt;
  &lt;li&gt;Possibility to forward connection logs via fluentd or Fluent Bit to an arbitrary logging system&lt;/li&gt;
  &lt;li&gt;Add OAuth2 client credentials flow as an authentication mechanism for Ditto managed HTTP connections&lt;/li&gt;
  &lt;li&gt;Enable loading additional extra JavaScript libraries for Rhino based JS mapping engine&lt;/li&gt;
  &lt;li&gt;Allow using the dash &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; as part of the “namespace” part in Ditto thing and policy IDs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following notable fixes are included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Policy enforcement for event publishing was fixed&lt;/li&gt;
  &lt;li&gt;Search updater cache inconsistencies were fixed&lt;/li&gt;
  &lt;li&gt;Fixed diff computation in search index on nested arrays&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following non-functional work is also included:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Collect Apache Kafka consumer metrics and expose them to Prometheus endpoint&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please have a look at the &lt;a href=&quot;release_notes_220.html&quot;&gt;2.2.0 release notes&lt;/a&gt; for a more detailed information on the release.&lt;/p&gt;

&lt;h2 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h2&gt;

&lt;p&gt;The new Java artifacts have been published at the &lt;a href=&quot;https://repo.eclipse.org/content/repositories/ditto/&quot;&gt;Eclipse Maven repository&lt;/a&gt;
as well as &lt;a href=&quot;https://repo1.maven.org/maven2/org/eclipse/ditto/&quot;&gt;Maven central&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Ditto JavaScript client release was published on &lt;a href=&quot;https://www.npmjs.com/~eclipse_ditto&quot;&gt;npmjs.com&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-dom&quot;&gt;@eclipse-ditto/ditto-javascript-client-dom&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/@eclipse-ditto/ditto-javascript-client-node&quot;&gt;@eclipse-ditto/ditto-javascript-client-node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Docker images have been pushed to Docker Hub:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-policies/&quot;&gt;eclipse/ditto-policies&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things/&quot;&gt;eclipse/ditto-things&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-things-search/&quot;&gt;eclipse/ditto-things-search&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-gateway/&quot;&gt;eclipse/ditto-gateway&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-connectivity/&quot;&gt;eclipse/ditto-connectivity&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hub.docker.com/r/eclipse/ditto-concierge/&quot;&gt;eclipse/ditto-concierge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Mon, 22 Nov 2021 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.org/ditto/2021-11-22-release-announcement-220.html</link>
            <guid isPermaLink="true">https://www.eclipse.org/ditto/2021-11-22-release-announcement-220.html</guid>
            
            <category>blog</category>
            
            
        </item>
        
        <item>
            <title>Support for OAuth2 client credentials flow for HTTP connections</title>
            <description>&lt;p&gt;The upcoming release of Eclipse Ditto &lt;strong&gt;version 2.2.0&lt;/strong&gt; supports HTTP connections that authenticate their requests
via OAuth2 client credentials flow as described in
&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc6749#section-4.4&quot;&gt;section 4.4 of RFC-6749&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Detailed information can be found at
&lt;a href=&quot;connectivity-protocol-bindings-http.html#oauth2-client-credentials-flow&quot;&gt;Connectivity API &amp;gt; HTTP 1.1 protocol binding&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This blog post shows an example of publishing a twin event to an HTTP endpoint via OAuth2 client credentials flow.
For simplicity, we will use &lt;code class=&quot;highlighter-rouge&quot;&gt;webhook.site&lt;/code&gt; for both the token endpoint and the event publishing destination.
Feel free to substitute them for real OAuth and HTTP servers.&lt;/p&gt;

&lt;h1 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h1&gt;

&lt;p&gt;This example requires 2 webhooks. We will use&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;https://webhook.site/785e80cd-e6e6-452a-be97-a59c53edb4d9&lt;/code&gt; for access token requests, and&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;https://webhook.site/6148b899-736f-47e6-9382-90b1d721630e&lt;/code&gt; for event publishing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Replace the webhook URIs by your own.&lt;/p&gt;

&lt;h1 id=&quot;configure-the-token-endpoint&quot;&gt;Configure the token endpoint&lt;/h1&gt;

&lt;p&gt;Configure the token webhook to return a valid access token response. Here is an example for a token expiring
at 00:00 on 1 January 3000. The field &lt;code class=&quot;highlighter-rouge&quot;&gt;expires_in&lt;/code&gt; is an arbitrary big number not reflecting the actual expiration
time of the access token.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Status code: 200&lt;/li&gt;
  &lt;li&gt;Content type: &lt;code class=&quot;highlighter-rouge&quot;&gt;application/json&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Response body:
    &lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;access_token&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ewogICJhbGciOiAiUlMyNTYiLAogICJ0eXAiOiAiSldUIgp9.ewogICJhdWQiOiBbXSwKICAiY2xpZW50X2lkIjogIm15LWNsaWVudC1pZCIsCiAgImV4cCI6IDMyNTAzNjgwMDAwLAogICJleHQiOiB7fSwKICAiaWF0IjogMCwKICAiaXNzIjogImh0dHBzOi8vbG9jYWxob3N0LyIsCiAgImp0aSI6ICI3ODVlODBjZC1lNmU2LTQ1MmEtYmU5Ny1hNTljNTNlZGI0ZDkiLAogICJuYmYiOiAwLAogICJzY3AiOiBbCiAgICAibXktc2NvcGUiCiAgXSwKICAic3ViIjogIm15LXN1YmplY3QiCn0.QUJD&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;expires_in&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1048576&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scope&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-scope&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;token_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bearer&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The access token has the form &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;headers&amp;gt;.&amp;lt;body&amp;gt;.&amp;lt;signature&amp;gt;&lt;/code&gt;, where &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;headers&amp;gt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; are base64-encoding
of the headers and the body in JSON format, and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;signature&amp;gt;&lt;/code&gt; is the base-64 encoded signature computed according
to the issuer’s key pair. Since the token webhook is not a real OAuth2 server, the signature in the example is a
placeholder. The unencoded headers and body are as follows.&lt;/p&gt;

&lt;h3 id=&quot;headers&quot;&gt;Headers&lt;/h3&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;alg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;RS256&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;typ&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;JWT&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;body&quot;&gt;Body&lt;/h3&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;aud&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;client_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-client-id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;exp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32503680000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ext&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;iat&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;iss&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://localhost/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;jti&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;785e80cd-e6e6-452a-be97-a59c53edb4d9&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nbf&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-scope&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sub&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-subject&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;create-the-connection&quot;&gt;Create the connection&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;connectivity-manage-connections.html#create-connection&quot;&gt;Create a connection&lt;/a&gt;
publishing twin events to the event publishing webhook using OAuth2 credentials.
The &lt;code class=&quot;highlighter-rouge&quot;&gt;tokenEndpoint&lt;/code&gt; field is set to the access token webhook.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http_oauth2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http_oauth2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;connectionType&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http-push&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;connectionStatus&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;open&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uri&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://webhook.site:443&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;targets&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;address&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;POST:/6148b899-736f-47e6-9382-90b1d721630e&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;topics&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;_/_/things/twin/events&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;authorizationContext&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;integration:ditto&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;credentials&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;oauth-client-credentials&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tokenEndpoint&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://webhook.site/785e80cd-e6e6-452a-be97-a59c53edb4d9&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;clientId&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-client-id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;clientSecret&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-client-secret&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;requestedScopes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-scope&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;generate-a-thing-created-event&quot;&gt;Generate a thing-created event&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http-api-doc.html#/Things/post_things&quot;&gt;Create a thing&lt;/a&gt;
granting read access to the connection’s subject. The thing-created event will be distributed
to the connection for publishing.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;_policy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;entries&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;DEFAULT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;subjects&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{{ request:subjectId }}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;the creator&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;integration:ditto&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;the connection&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;resources&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;policy:/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;grant&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;READ&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;WRITE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;revoke&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thing:/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;grant&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;READ&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;WRITE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;revoke&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
          &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;http-requests-made-by-the-http-connection&quot;&gt;HTTP requests made by the HTTP connection&lt;/h1&gt;

&lt;p&gt;Before the HTTP connection publishes the thing-created event, it makes an access token request against the token
endpoint to obtain a bearer token.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /785e80cd-e6e6-452a-be97-a59c53edb4d9 HTTP/1.1
Host: webhook.site
Accept: application/json
Content-Type: application/x-www-form-urlencoded

grant_type=client_credentials
&amp;amp;client_id=my-client-id
&amp;amp;client_secret=my-client-secret
&amp;amp;scope=my-scope
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The request should appear at the access token webhook. The webhook should return the configured access token response.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;access_token&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ewogICJhbGciOiAiUlMyNTYiLAogICJ0eXAiOiAiSldUIgp9.ewogICJhdWQiOiBbXSwKICAiY2xpZW50X2lkIjogIm15LWNsaWVudC1pZCIsCiAgImV4cCI6IDMyNTAzNjgwMDAwLAogICJleHQiOiB7fSwKICAiaWF0IjogMCwKICAiaXNzIjogImh0dHBzOi8vbG9jYWxob3N0LyIsCiAgImp0aSI6ICI3ODVlODBjZC1lNmU2LTQ1MmEtYmU5Ny1hNTljNTNlZGI0ZDkiLAogICJuYmYiOiAwLAogICJzY3AiOiBbCiAgICAibXktc2NvcGUiCiAgXSwKICAic3ViIjogIm15LXN1YmplY3QiCn0.QUJD&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;expires_in&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1048576&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scope&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;my-scope&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;token_type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bearer&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The HTTP connection will cache the access token and use it to authenticate itself at the event publishing webhook
for each thing event, including the first thing-created event.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /6148b899-736f-47e6-9382-90b1d721630e HTTP/1.1
Host: webhook.site
Content-Type: application/vnd.eclipse.ditto+json
Authorization: Bearer ewogICJhbGciOiAiUlMyNTYiLAogICJ0eXAiOiAiSldUIgp9.ewogICJhdWQiOiBbXSwKICAiY2xpZW50X2lkIjogIm15LWNsaWVudC1pZCIsCiAgImV4cCI6IDMyNTAzNjgwMDAwLAogICJleHQiOiB7fSwKICAiaWF0IjogMCwKICAiaXNzIjogImh0dHBzOi8vbG9jYWxob3N0LyIsCiAgImp0aSI6ICI3ODVlODBjZC1lNmU2LTQ1MmEtYmU5Ny1hNTljNTNlZGI0ZDkiLAogICJuYmYiOiAwLAogICJzY3AiOiBbCiAgICAibXktc2NvcGUiCiAgXSwKICAic3ViIjogIm15LXN1YmplY3QiCn0.QUJD

{
  &quot;topic&quot;: &quot;&amp;lt;namespace&amp;gt;/&amp;lt;name&amp;gt;/things/twin/events/created&quot;,
  &quot;headers&quot;: {},
  &quot;path&quot;: &quot;/&quot;,
  &quot;value&quot;: {
    &quot;policyId&quot;: &quot;&amp;lt;policy-id&amp;gt;&quot;
  },
  &quot;revision&quot;: 1
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The HTTP connection will obtain a new token from the access token webhook when the previous token is about to expire.&lt;/p&gt;

&lt;p&gt;Please &lt;a href=&quot;feedback.html&quot;&gt;get in touch&lt;/a&gt; if you have feedback or questions regarding this new functionality.
&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt; 
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Wed, 03 Nov 2021 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.org/ditto/2021-11-03-oauth2.html</link>
            <guid isPermaLink="true">https://www.eclipse.org/ditto/2021-11-03-oauth2.html</guid>
            
            <category>blog</category>
            
            <category>architecture</category>
            
            <category>connectivity</category>
            
            
        </item>
        
        <item>
            <title>Completed Kafka Connectivity</title>
            <description>&lt;h2 id=&quot;consuming-messages-from-apache-kafka-in-eclipse-ditto&quot;&gt;Consuming messages from Apache Kafka in Eclipse Ditto&lt;/h2&gt;

&lt;p&gt;Eclipse Ditto did support publishing events and messages to Apache Kafka for quite some time now.&lt;br /&gt;
The time has come to support consuming as well.&lt;/p&gt;

&lt;p&gt;A Kafka connection behaves slightly different from other consuming Connections in Ditto.&lt;br /&gt;
The following aspects are special:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;connectivity-protocol-bindings-kafka2.html#quality-of-service&quot;&gt;Backpressure by using acknowledgements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;connectivity-protocol-bindings-kafka2.html#backpressure-by-using-acknowledgements&quot;&gt;Preserve order of messages on redelivery due to failed acknowledgements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;connectivity-protocol-bindings-kafka2.html#message-expiry&quot;&gt;Expiry of messages&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;scalability&quot;&gt;Scalability&lt;/h3&gt;

&lt;p&gt;Kafka’s way of horizontal scaling is to use partitions.
The higher the load the more partitions should be configured.&lt;br /&gt;
On consumer side this means that a so-called consumer group can have as many consuming clients as number of partitions exist.&lt;br /&gt;
Each partition would then be consumed by one client.&lt;/p&gt;

&lt;p&gt;This perfectly matches with Ditto connections scaling, each Ditto connection builds such a consumer group.  &lt;br /&gt;
For a connection there are two ways of scaling:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;clientCount&lt;/code&gt; on &lt;a href=&quot;basic-connections.html#connection-model&quot;&gt;connection level&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;consumerCount&lt;/code&gt; on &lt;a href=&quot;basic-connections.html#sources&quot;&gt;source level&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;A connection client bundles all consumers for all sources and all publishers for all targets.
It is guaranteed that for a single connection only one client can be instantiated per instance of the connectivity microservice.&lt;br /&gt;
This way Ditto provides horizontal scaling.&lt;/p&gt;

&lt;p&gt;Therefore, the &lt;code class=&quot;highlighter-rouge&quot;&gt;clientCount&lt;/code&gt; should never be configured higher than the number of available connectivity instances.&lt;/p&gt;

&lt;p&gt;If the connectivity instance is not fully used by a single connection client, the &lt;code class=&quot;highlighter-rouge&quot;&gt;consumerCount&lt;/code&gt; can be used to scale a 
connection’s consumers vertically.
The &lt;code class=&quot;highlighter-rouge&quot;&gt;consumerCount&lt;/code&gt; of a source indicates how many consumers should be started for a single connection client for this source.
Each consumer is a separate consuming client in the consumer group of the connection.&lt;/p&gt;

&lt;p&gt;This means that the number of partition should be greater or equal than &lt;code class=&quot;highlighter-rouge&quot;&gt;clientCount&lt;/code&gt; multiplied by the highest 
&lt;code class=&quot;highlighter-rouge&quot;&gt;consumerCount&lt;/code&gt; of a source.&lt;/p&gt;

&lt;h3 id=&quot;backpressure-and-quality-of-service&quot;&gt;Backpressure and Quality of Service&lt;/h3&gt;

&lt;p&gt;Usually there is an application connected to Ditto which is consuming either messages or events of devices connected to Ditto.&lt;br /&gt;
These messages and events can now be issued by devices via Kafka.&lt;br /&gt;
What happens now when the connected application temporarily can’t process the messages emitted by Ditto in the rate the 
devices publish their messages via Kafka into Ditto?&lt;br /&gt;
The answer is: “It depends.”&lt;/p&gt;

&lt;p&gt;There are two steps of increasing delivery guarantee for messages to the connected application.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Make use of &lt;a href=&quot;basic-connections.html#source-acknowledgement-requests&quot;&gt;acknowledgements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Configure the &lt;code class=&quot;highlighter-rouge&quot;&gt;qos&lt;/code&gt; for the &lt;a href=&quot;basic-connections.html#sources&quot;&gt;source&lt;/a&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The first will introduce backpressure from the consuming application to the Kafka consumer in Ditto.&lt;br /&gt;
This means that the consumer will automatically slow down consuming messages when the performance of the connected 
application slows down.
This way the application has time to scale up, while the messages are buffered in Kafka.&lt;/p&gt;

&lt;p&gt;The second step can be used when it’s necessary to ensure that the application not just received but successfully 
processed the message. If the message could not be processed successfully or if the acknowledgement didn’t arrive in time, 
the Kafka consumer will restart consuming messages from the last successfully committed offset.&lt;/p&gt;

&lt;h3 id=&quot;expiry&quot;&gt;Expiry&lt;/h3&gt;

&lt;p&gt;Now that we know about backpressure we also know, that messages could remain in Kafka for some time.&lt;br /&gt;
The time can be limited by Kafka’s retention time, but this would be applied to all messages in the same way.
What if some messages become invalid after some time, but others won’t?&lt;/p&gt;

&lt;p&gt;Ditto provides an &lt;a href=&quot;connectivity-protocol-bindings-kafka2.html#message-expiry&quot;&gt;expiry of messages on a per-message level&lt;/a&gt;.
That way Ditto filters such expired messages but still processes all others.&lt;/p&gt;

&lt;h2 id=&quot;we-embrace-your-feedback&quot;&gt;We embrace your feedback&lt;/h2&gt;

&lt;p&gt;Did you recognize a possible match of Ditto for some of your usecases?
Do you miss something in this new feature?&lt;br /&gt;
We would love to get your &lt;a href=&quot;feedback.html&quot;&gt;feedback&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;figure&gt;&lt;img class=&quot;docimage&quot; src=&quot;images/ditto.svg&quot; alt=&quot;Ditto&quot; style=&quot;max-width: 500px&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;–&lt;br /&gt;
The Eclipse Ditto team&lt;/p&gt;
</description>
            <pubDate>Wed, 29 Sep 2021 00:00:00 +0000</pubDate>
            <link>https://www.eclipse.org/ditto/2021-09-29-kafka-connectivity.html</link>
            <guid isPermaLink="true">https://www.eclipse.org/ditto/2021-09-29-kafka-connectivity.html</guid>
            
            <category>blog</category>
            
            
        </item>
        
    </channel>
</rss>
