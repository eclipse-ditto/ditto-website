# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0
#
# SPDX-License-Identifier: EPL-2.0
get:
  summary: Retrieving the configuration of a specific service instance.
  description: |-
    Return the configuration of a specific service instance.
  security:
    - DevOpsBasic: []
    - DevOpsBearer: []
  tags:
    - Devops
  parameters:
    - $ref: '../../parameters/moduleNamePathParam.yml'
    - $ref: '../../parameters/namePodParam.yml'
    - $ref: '../../parameters/pathParam.yml'
  responses:
    '200':
      description: |-
        Return The current value of specific service instance.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '../../schemas/config/retrieveConfigService.yml'
          example: |-
            {
              "gateway": {
                "podName": {
                  "type": "common.responses:retrieveConfig",
                  "status": 200,
                  "config": {
                    "cluster": {
                      "cluster-status-roles-blocklist": [
                          "cluster1",
                          "......" ,
                          "clusterN"
                      ],
                      "number-of-shards": 20
                    },
                    "ddata": {
                      "vm arg1": "string",
                      ".............": "string",
                      "vm argn" : "string"
                    },
                    "devops": {
                      "feature": {
                        "merge-things-enabled": true
                      },
                      "namespace": {
                        "block-time": "string"
                      }
                    },
                    "gateway": {
                      "authentication": {
                        "devops": {
                          "devops-authentication-method": "string",
                          "password": "string",
                          "secured": true,
                          "status-authentication-method": "string",
                          "statusPassword": "string"
                        },
                        "http": {
                          "proxy": {
                            "enabled": false
                          }
                        },
                        "oauth": {
                          "allowed-clock-skew": "string",
                          "openid-connect-issuers": {
                            "google": {
                              "issuer": "string"
                            }
                          },
                          "protocol": "https",
                          "token-integration-subject": "string"
                        },
                        "pre-authentication": {
                          "enabled": "true"
                        }
                      }
                    }
                  }
                }
              }
            }
    '401':
      description: The request could not be completed due to missing authentication.
      content:
        text/plain:
          schema:
            $ref: '../../schemas/errors/textUnauthorizeError.yml'
